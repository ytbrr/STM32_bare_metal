
7_PRINTF2_Modular.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001214  080001a0  080001a0  000011a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000050  080013b4  080013b4  000023b4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001404  08001404  0000305c  2**0
                  CONTENTS
  4 .ARM          00000008  08001404  08001404  00002404  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800140c  0800140c  0000305c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800140c  0800140c  0000240c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08001410  08001410  00002410  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000005c  20000000  08001414  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000016c  2000005c  08001470  0000305c  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200001c8  08001470  000031c8  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0000305c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000f9b  00000000  00000000  0000308c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000004f3  00000000  00000000  00004027  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000150  00000000  00000000  00004520  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 000000e4  00000000  00000000  00004670  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000f978  00000000  00000000  00004754  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00001b7d  00000000  00000000  000140cc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000553cf  00000000  00000000  00015c49  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  0006b018  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000ba4  00000000  00000000  0006b05c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000005b  00000000  00000000  0006bc00  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	@ (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	@ (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	@ (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	2000005c 	.word	0x2000005c
 80001bc:	00000000 	.word	0x00000000
 80001c0:	0800139c 	.word	0x0800139c

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	@ (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	@ (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	@ (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000060 	.word	0x20000060
 80001dc:	0800139c 	.word	0x0800139c

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <main>:
#define LED_PIN				GPIOA_5

char key;

int main(void)
{
 8000280:	b580      	push	{r7, lr}
 8000282:	af00      	add	r7, sp, #0

	/* Enable clock access to GPIOA*/
	RCC->AHB1ENR |= GPIOAEN;
 8000284:	4b0b      	ldr	r3, [pc, #44]	@ (80002b4 <main+0x34>)
 8000286:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000288:	4a0a      	ldr	r2, [pc, #40]	@ (80002b4 <main+0x34>)
 800028a:	f043 0301 	orr.w	r3, r3, #1
 800028e:	6313      	str	r3, [r2, #48]	@ 0x30

	/* set PA5 as output pin*/
	GPIOA->MODER |= (1U << 10);
 8000290:	4b09      	ldr	r3, [pc, #36]	@ (80002b8 <main+0x38>)
 8000292:	681b      	ldr	r3, [r3, #0]
 8000294:	4a08      	ldr	r2, [pc, #32]	@ (80002b8 <main+0x38>)
 8000296:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 800029a:	6013      	str	r3, [r2, #0]
	GPIOA->MODER &= ~(1U << 11);
 800029c:	4b06      	ldr	r3, [pc, #24]	@ (80002b8 <main+0x38>)
 800029e:	681b      	ldr	r3, [r3, #0]
 80002a0:	4a05      	ldr	r2, [pc, #20]	@ (80002b8 <main+0x38>)
 80002a2:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 80002a6:	6013      	str	r3, [r2, #0]

	uar2_tx_init();
 80002a8:	f000 f8ae 	bl	8000408 <uar2_tx_init>

	while(1)
	{
		printf("Hello from STM32F401Re...\n\r");
 80002ac:	4803      	ldr	r0, [pc, #12]	@ (80002bc <main+0x3c>)
 80002ae:	f000 fa07 	bl	80006c0 <iprintf>
 80002b2:	e7fb      	b.n	80002ac <main+0x2c>
 80002b4:	40023800 	.word	0x40023800
 80002b8:	40020000 	.word	0x40020000
 80002bc:	080013b4 	.word	0x080013b4

080002c0 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80002c0:	b580      	push	{r7, lr}
 80002c2:	b086      	sub	sp, #24
 80002c4:	af00      	add	r7, sp, #0
 80002c6:	60f8      	str	r0, [r7, #12]
 80002c8:	60b9      	str	r1, [r7, #8]
 80002ca:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002cc:	2300      	movs	r3, #0
 80002ce:	617b      	str	r3, [r7, #20]
 80002d0:	e00a      	b.n	80002e8 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80002d2:	f3af 8000 	nop.w
 80002d6:	4601      	mov	r1, r0
 80002d8:	68bb      	ldr	r3, [r7, #8]
 80002da:	1c5a      	adds	r2, r3, #1
 80002dc:	60ba      	str	r2, [r7, #8]
 80002de:	b2ca      	uxtb	r2, r1
 80002e0:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002e2:	697b      	ldr	r3, [r7, #20]
 80002e4:	3301      	adds	r3, #1
 80002e6:	617b      	str	r3, [r7, #20]
 80002e8:	697a      	ldr	r2, [r7, #20]
 80002ea:	687b      	ldr	r3, [r7, #4]
 80002ec:	429a      	cmp	r2, r3
 80002ee:	dbf0      	blt.n	80002d2 <_read+0x12>
  }

  return len;
 80002f0:	687b      	ldr	r3, [r7, #4]
}
 80002f2:	4618      	mov	r0, r3
 80002f4:	3718      	adds	r7, #24
 80002f6:	46bd      	mov	sp, r7
 80002f8:	bd80      	pop	{r7, pc}

080002fa <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80002fa:	b580      	push	{r7, lr}
 80002fc:	b086      	sub	sp, #24
 80002fe:	af00      	add	r7, sp, #0
 8000300:	60f8      	str	r0, [r7, #12]
 8000302:	60b9      	str	r1, [r7, #8]
 8000304:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000306:	2300      	movs	r3, #0
 8000308:	617b      	str	r3, [r7, #20]
 800030a:	e009      	b.n	8000320 <_write+0x26>
  {
    __io_putchar(*ptr++);
 800030c:	68bb      	ldr	r3, [r7, #8]
 800030e:	1c5a      	adds	r2, r3, #1
 8000310:	60ba      	str	r2, [r7, #8]
 8000312:	781b      	ldrb	r3, [r3, #0]
 8000314:	4618      	mov	r0, r3
 8000316:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800031a:	697b      	ldr	r3, [r7, #20]
 800031c:	3301      	adds	r3, #1
 800031e:	617b      	str	r3, [r7, #20]
 8000320:	697a      	ldr	r2, [r7, #20]
 8000322:	687b      	ldr	r3, [r7, #4]
 8000324:	429a      	cmp	r2, r3
 8000326:	dbf1      	blt.n	800030c <_write+0x12>
  }
  return len;
 8000328:	687b      	ldr	r3, [r7, #4]
}
 800032a:	4618      	mov	r0, r3
 800032c:	3718      	adds	r7, #24
 800032e:	46bd      	mov	sp, r7
 8000330:	bd80      	pop	{r7, pc}

08000332 <_close>:

int _close(int file)
{
 8000332:	b480      	push	{r7}
 8000334:	b083      	sub	sp, #12
 8000336:	af00      	add	r7, sp, #0
 8000338:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800033a:	f04f 33ff 	mov.w	r3, #4294967295
}
 800033e:	4618      	mov	r0, r3
 8000340:	370c      	adds	r7, #12
 8000342:	46bd      	mov	sp, r7
 8000344:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000348:	4770      	bx	lr

0800034a <_fstat>:


int _fstat(int file, struct stat *st)
{
 800034a:	b480      	push	{r7}
 800034c:	b083      	sub	sp, #12
 800034e:	af00      	add	r7, sp, #0
 8000350:	6078      	str	r0, [r7, #4]
 8000352:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000354:	683b      	ldr	r3, [r7, #0]
 8000356:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 800035a:	605a      	str	r2, [r3, #4]
  return 0;
 800035c:	2300      	movs	r3, #0
}
 800035e:	4618      	mov	r0, r3
 8000360:	370c      	adds	r7, #12
 8000362:	46bd      	mov	sp, r7
 8000364:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000368:	4770      	bx	lr

0800036a <_isatty>:

int _isatty(int file)
{
 800036a:	b480      	push	{r7}
 800036c:	b083      	sub	sp, #12
 800036e:	af00      	add	r7, sp, #0
 8000370:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8000372:	2301      	movs	r3, #1
}
 8000374:	4618      	mov	r0, r3
 8000376:	370c      	adds	r7, #12
 8000378:	46bd      	mov	sp, r7
 800037a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800037e:	4770      	bx	lr

08000380 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8000380:	b480      	push	{r7}
 8000382:	b085      	sub	sp, #20
 8000384:	af00      	add	r7, sp, #0
 8000386:	60f8      	str	r0, [r7, #12]
 8000388:	60b9      	str	r1, [r7, #8]
 800038a:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 800038c:	2300      	movs	r3, #0
}
 800038e:	4618      	mov	r0, r3
 8000390:	3714      	adds	r7, #20
 8000392:	46bd      	mov	sp, r7
 8000394:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000398:	4770      	bx	lr
	...

0800039c <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 800039c:	b580      	push	{r7, lr}
 800039e:	b086      	sub	sp, #24
 80003a0:	af00      	add	r7, sp, #0
 80003a2:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80003a4:	4a14      	ldr	r2, [pc, #80]	@ (80003f8 <_sbrk+0x5c>)
 80003a6:	4b15      	ldr	r3, [pc, #84]	@ (80003fc <_sbrk+0x60>)
 80003a8:	1ad3      	subs	r3, r2, r3
 80003aa:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80003ac:	697b      	ldr	r3, [r7, #20]
 80003ae:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80003b0:	4b13      	ldr	r3, [pc, #76]	@ (8000400 <_sbrk+0x64>)
 80003b2:	681b      	ldr	r3, [r3, #0]
 80003b4:	2b00      	cmp	r3, #0
 80003b6:	d102      	bne.n	80003be <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80003b8:	4b11      	ldr	r3, [pc, #68]	@ (8000400 <_sbrk+0x64>)
 80003ba:	4a12      	ldr	r2, [pc, #72]	@ (8000404 <_sbrk+0x68>)
 80003bc:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80003be:	4b10      	ldr	r3, [pc, #64]	@ (8000400 <_sbrk+0x64>)
 80003c0:	681a      	ldr	r2, [r3, #0]
 80003c2:	687b      	ldr	r3, [r7, #4]
 80003c4:	4413      	add	r3, r2
 80003c6:	693a      	ldr	r2, [r7, #16]
 80003c8:	429a      	cmp	r2, r3
 80003ca:	d207      	bcs.n	80003dc <_sbrk+0x40>
  {
    errno = ENOMEM;
 80003cc:	f000 fa1c 	bl	8000808 <__errno>
 80003d0:	4603      	mov	r3, r0
 80003d2:	220c      	movs	r2, #12
 80003d4:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80003d6:	f04f 33ff 	mov.w	r3, #4294967295
 80003da:	e009      	b.n	80003f0 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80003dc:	4b08      	ldr	r3, [pc, #32]	@ (8000400 <_sbrk+0x64>)
 80003de:	681b      	ldr	r3, [r3, #0]
 80003e0:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80003e2:	4b07      	ldr	r3, [pc, #28]	@ (8000400 <_sbrk+0x64>)
 80003e4:	681a      	ldr	r2, [r3, #0]
 80003e6:	687b      	ldr	r3, [r7, #4]
 80003e8:	4413      	add	r3, r2
 80003ea:	4a05      	ldr	r2, [pc, #20]	@ (8000400 <_sbrk+0x64>)
 80003ec:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80003ee:	68fb      	ldr	r3, [r7, #12]
}
 80003f0:	4618      	mov	r0, r3
 80003f2:	3718      	adds	r7, #24
 80003f4:	46bd      	mov	sp, r7
 80003f6:	bd80      	pop	{r7, pc}
 80003f8:	20018000 	.word	0x20018000
 80003fc:	00000400 	.word	0x00000400
 8000400:	20000078 	.word	0x20000078
 8000404:	200001c8 	.word	0x200001c8

08000408 <uar2_tx_init>:
	UART2_Write(ch);
	return ch;
}

void uar2_tx_init(void)
{
 8000408:	b580      	push	{r7, lr}
 800040a:	af00      	add	r7, sp, #0
	/* configure UART GPIO pin */
	/* enable clock access to GPIOA and set PA2 mode to alternate*/
	RCC->AHB1ENR |= GPIOAEN;
 800040c:	4b1f      	ldr	r3, [pc, #124]	@ (800048c <uar2_tx_init+0x84>)
 800040e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000410:	4a1e      	ldr	r2, [pc, #120]	@ (800048c <uar2_tx_init+0x84>)
 8000412:	f043 0301 	orr.w	r3, r3, #1
 8000416:	6313      	str	r3, [r2, #48]	@ 0x30
	GPIOA->MODER &= ~(1U << 4);
 8000418:	4b1d      	ldr	r3, [pc, #116]	@ (8000490 <uar2_tx_init+0x88>)
 800041a:	681b      	ldr	r3, [r3, #0]
 800041c:	4a1c      	ldr	r2, [pc, #112]	@ (8000490 <uar2_tx_init+0x88>)
 800041e:	f023 0310 	bic.w	r3, r3, #16
 8000422:	6013      	str	r3, [r2, #0]
	GPIOA->MODER |= (1U << 5);
 8000424:	4b1a      	ldr	r3, [pc, #104]	@ (8000490 <uar2_tx_init+0x88>)
 8000426:	681b      	ldr	r3, [r3, #0]
 8000428:	4a19      	ldr	r2, [pc, #100]	@ (8000490 <uar2_tx_init+0x88>)
 800042a:	f043 0320 	orr.w	r3, r3, #32
 800042e:	6013      	str	r3, [r2, #0]
	/* set PA2 alternate function type to UART_TX AF07*/
	GPIOA->AFR[0] |= (1U << 8);
 8000430:	4b17      	ldr	r3, [pc, #92]	@ (8000490 <uar2_tx_init+0x88>)
 8000432:	6a1b      	ldr	r3, [r3, #32]
 8000434:	4a16      	ldr	r2, [pc, #88]	@ (8000490 <uar2_tx_init+0x88>)
 8000436:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800043a:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] |= (1U << 9);
 800043c:	4b14      	ldr	r3, [pc, #80]	@ (8000490 <uar2_tx_init+0x88>)
 800043e:	6a1b      	ldr	r3, [r3, #32]
 8000440:	4a13      	ldr	r2, [pc, #76]	@ (8000490 <uar2_tx_init+0x88>)
 8000442:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8000446:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] |= (1U << 10);
 8000448:	4b11      	ldr	r3, [pc, #68]	@ (8000490 <uar2_tx_init+0x88>)
 800044a:	6a1b      	ldr	r3, [r3, #32]
 800044c:	4a10      	ldr	r2, [pc, #64]	@ (8000490 <uar2_tx_init+0x88>)
 800044e:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8000452:	6213      	str	r3, [r2, #32]
	GPIOA->AFR[0] &= !(1U << 11);
 8000454:	4b0e      	ldr	r3, [pc, #56]	@ (8000490 <uar2_tx_init+0x88>)
 8000456:	6a1b      	ldr	r3, [r3, #32]
 8000458:	4b0d      	ldr	r3, [pc, #52]	@ (8000490 <uar2_tx_init+0x88>)
 800045a:	2200      	movs	r2, #0
 800045c:	621a      	str	r2, [r3, #32]

	/* configure UART module */
	/* enable clock access to UART2*/
	RCC->APB1ENR |= UART2EN;
 800045e:	4b0b      	ldr	r3, [pc, #44]	@ (800048c <uar2_tx_init+0x84>)
 8000460:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000462:	4a0a      	ldr	r2, [pc, #40]	@ (800048c <uar2_tx_init+0x84>)
 8000464:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8000468:	6413      	str	r3, [r2, #64]	@ 0x40
	/* transfer direction */
	set_BaudRate(USART2, APB1_CLK, UART_BAUDRATE);
 800046a:	f44f 32e1 	mov.w	r2, #115200	@ 0x1c200
 800046e:	4909      	ldr	r1, [pc, #36]	@ (8000494 <uar2_tx_init+0x8c>)
 8000470:	4809      	ldr	r0, [pc, #36]	@ (8000498 <uar2_tx_init+0x90>)
 8000472:	f000 f813 	bl	800049c <set_BaudRate>
	USART2->CR1 = CR1_TE;
 8000476:	4b08      	ldr	r3, [pc, #32]	@ (8000498 <uar2_tx_init+0x90>)
 8000478:	2208      	movs	r2, #8
 800047a:	60da      	str	r2, [r3, #12]

	/* enable UART module */
	USART2->CR1 |= CR1_UE;
 800047c:	4b06      	ldr	r3, [pc, #24]	@ (8000498 <uar2_tx_init+0x90>)
 800047e:	68db      	ldr	r3, [r3, #12]
 8000480:	4a05      	ldr	r2, [pc, #20]	@ (8000498 <uar2_tx_init+0x90>)
 8000482:	f043 0308 	orr.w	r3, r3, #8
 8000486:	60d3      	str	r3, [r2, #12]
}
 8000488:	bf00      	nop
 800048a:	bd80      	pop	{r7, pc}
 800048c:	40023800 	.word	0x40023800
 8000490:	40020000 	.word	0x40020000
 8000494:	00f42400 	.word	0x00f42400
 8000498:	40004400 	.word	0x40004400

0800049c <set_BaudRate>:
	/* write to transmit data register*/
	USART2->DR = (ch & 0xff);
}

static void set_BaudRate(USART_TypeDef *USARTx, uint32_t PeriphClk, uint32_t BaudRate)
{
 800049c:	b580      	push	{r7, lr}
 800049e:	b084      	sub	sp, #16
 80004a0:	af00      	add	r7, sp, #0
 80004a2:	60f8      	str	r0, [r7, #12]
 80004a4:	60b9      	str	r1, [r7, #8]
 80004a6:	607a      	str	r2, [r7, #4]
	USARTx->BRR = compute_uart_bd(PeriphClk, BaudRate);
 80004a8:	6879      	ldr	r1, [r7, #4]
 80004aa:	68b8      	ldr	r0, [r7, #8]
 80004ac:	f000 f808 	bl	80004c0 <compute_uart_bd>
 80004b0:	4603      	mov	r3, r0
 80004b2:	461a      	mov	r2, r3
 80004b4:	68fb      	ldr	r3, [r7, #12]
 80004b6:	609a      	str	r2, [r3, #8]
}
 80004b8:	bf00      	nop
 80004ba:	3710      	adds	r7, #16
 80004bc:	46bd      	mov	sp, r7
 80004be:	bd80      	pop	{r7, pc}

080004c0 <compute_uart_bd>:

static uint16_t compute_uart_bd(uint32_t PeriphClk, uint32_t BaudRate)
{
 80004c0:	b480      	push	{r7}
 80004c2:	b083      	sub	sp, #12
 80004c4:	af00      	add	r7, sp, #0
 80004c6:	6078      	str	r0, [r7, #4]
 80004c8:	6039      	str	r1, [r7, #0]
	return (PeriphClk + (BaudRate/2U))/BaudRate;
 80004ca:	683b      	ldr	r3, [r7, #0]
 80004cc:	085a      	lsrs	r2, r3, #1
 80004ce:	687b      	ldr	r3, [r7, #4]
 80004d0:	441a      	add	r2, r3
 80004d2:	683b      	ldr	r3, [r7, #0]
 80004d4:	fbb2 f3f3 	udiv	r3, r2, r3
 80004d8:	b29b      	uxth	r3, r3
}
 80004da:	4618      	mov	r0, r3
 80004dc:	370c      	adds	r7, #12
 80004de:	46bd      	mov	sp, r7
 80004e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004e4:	4770      	bx	lr
	...

080004e8 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80004e8:	480d      	ldr	r0, [pc, #52]	@ (8000520 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80004ea:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80004ec:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80004f0:	480c      	ldr	r0, [pc, #48]	@ (8000524 <LoopForever+0x6>)
  ldr r1, =_edata
 80004f2:	490d      	ldr	r1, [pc, #52]	@ (8000528 <LoopForever+0xa>)
  ldr r2, =_sidata
 80004f4:	4a0d      	ldr	r2, [pc, #52]	@ (800052c <LoopForever+0xe>)
  movs r3, #0
 80004f6:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80004f8:	e002      	b.n	8000500 <LoopCopyDataInit>

080004fa <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80004fa:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80004fc:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80004fe:	3304      	adds	r3, #4

08000500 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000500:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000502:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000504:	d3f9      	bcc.n	80004fa <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000506:	4a0a      	ldr	r2, [pc, #40]	@ (8000530 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000508:	4c0a      	ldr	r4, [pc, #40]	@ (8000534 <LoopForever+0x16>)
  movs r3, #0
 800050a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800050c:	e001      	b.n	8000512 <LoopFillZerobss>

0800050e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800050e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000510:	3204      	adds	r2, #4

08000512 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000512:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000514:	d3fb      	bcc.n	800050e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000516:	f000 f97d 	bl	8000814 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800051a:	f7ff feb1 	bl	8000280 <main>

0800051e <LoopForever>:

LoopForever:
  b LoopForever
 800051e:	e7fe      	b.n	800051e <LoopForever>
  ldr   r0, =_estack
 8000520:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 8000524:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000528:	2000005c 	.word	0x2000005c
  ldr r2, =_sidata
 800052c:	08001414 	.word	0x08001414
  ldr r2, =_sbss
 8000530:	2000005c 	.word	0x2000005c
  ldr r4, =_ebss
 8000534:	200001c8 	.word	0x200001c8

08000538 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000538:	e7fe      	b.n	8000538 <ADC_IRQHandler>
	...

0800053c <std>:
 800053c:	2300      	movs	r3, #0
 800053e:	b510      	push	{r4, lr}
 8000540:	4604      	mov	r4, r0
 8000542:	e9c0 3300 	strd	r3, r3, [r0]
 8000546:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800054a:	6083      	str	r3, [r0, #8]
 800054c:	8181      	strh	r1, [r0, #12]
 800054e:	6643      	str	r3, [r0, #100]	@ 0x64
 8000550:	81c2      	strh	r2, [r0, #14]
 8000552:	6183      	str	r3, [r0, #24]
 8000554:	4619      	mov	r1, r3
 8000556:	2208      	movs	r2, #8
 8000558:	305c      	adds	r0, #92	@ 0x5c
 800055a:	f000 f906 	bl	800076a <memset>
 800055e:	4b0d      	ldr	r3, [pc, #52]	@ (8000594 <std+0x58>)
 8000560:	6263      	str	r3, [r4, #36]	@ 0x24
 8000562:	4b0d      	ldr	r3, [pc, #52]	@ (8000598 <std+0x5c>)
 8000564:	62a3      	str	r3, [r4, #40]	@ 0x28
 8000566:	4b0d      	ldr	r3, [pc, #52]	@ (800059c <std+0x60>)
 8000568:	62e3      	str	r3, [r4, #44]	@ 0x2c
 800056a:	4b0d      	ldr	r3, [pc, #52]	@ (80005a0 <std+0x64>)
 800056c:	6323      	str	r3, [r4, #48]	@ 0x30
 800056e:	4b0d      	ldr	r3, [pc, #52]	@ (80005a4 <std+0x68>)
 8000570:	6224      	str	r4, [r4, #32]
 8000572:	429c      	cmp	r4, r3
 8000574:	d006      	beq.n	8000584 <std+0x48>
 8000576:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 800057a:	4294      	cmp	r4, r2
 800057c:	d002      	beq.n	8000584 <std+0x48>
 800057e:	33d0      	adds	r3, #208	@ 0xd0
 8000580:	429c      	cmp	r4, r3
 8000582:	d105      	bne.n	8000590 <std+0x54>
 8000584:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8000588:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800058c:	f000 b966 	b.w	800085c <__retarget_lock_init_recursive>
 8000590:	bd10      	pop	{r4, pc}
 8000592:	bf00      	nop
 8000594:	080006e5 	.word	0x080006e5
 8000598:	08000707 	.word	0x08000707
 800059c:	0800073f 	.word	0x0800073f
 80005a0:	08000763 	.word	0x08000763
 80005a4:	2000007c 	.word	0x2000007c

080005a8 <stdio_exit_handler>:
 80005a8:	4a02      	ldr	r2, [pc, #8]	@ (80005b4 <stdio_exit_handler+0xc>)
 80005aa:	4903      	ldr	r1, [pc, #12]	@ (80005b8 <stdio_exit_handler+0x10>)
 80005ac:	4803      	ldr	r0, [pc, #12]	@ (80005bc <stdio_exit_handler+0x14>)
 80005ae:	f000 b869 	b.w	8000684 <_fwalk_sglue>
 80005b2:	bf00      	nop
 80005b4:	20000000 	.word	0x20000000
 80005b8:	080010fd 	.word	0x080010fd
 80005bc:	20000010 	.word	0x20000010

080005c0 <cleanup_stdio>:
 80005c0:	6841      	ldr	r1, [r0, #4]
 80005c2:	4b0c      	ldr	r3, [pc, #48]	@ (80005f4 <cleanup_stdio+0x34>)
 80005c4:	4299      	cmp	r1, r3
 80005c6:	b510      	push	{r4, lr}
 80005c8:	4604      	mov	r4, r0
 80005ca:	d001      	beq.n	80005d0 <cleanup_stdio+0x10>
 80005cc:	f000 fd96 	bl	80010fc <_fflush_r>
 80005d0:	68a1      	ldr	r1, [r4, #8]
 80005d2:	4b09      	ldr	r3, [pc, #36]	@ (80005f8 <cleanup_stdio+0x38>)
 80005d4:	4299      	cmp	r1, r3
 80005d6:	d002      	beq.n	80005de <cleanup_stdio+0x1e>
 80005d8:	4620      	mov	r0, r4
 80005da:	f000 fd8f 	bl	80010fc <_fflush_r>
 80005de:	68e1      	ldr	r1, [r4, #12]
 80005e0:	4b06      	ldr	r3, [pc, #24]	@ (80005fc <cleanup_stdio+0x3c>)
 80005e2:	4299      	cmp	r1, r3
 80005e4:	d004      	beq.n	80005f0 <cleanup_stdio+0x30>
 80005e6:	4620      	mov	r0, r4
 80005e8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80005ec:	f000 bd86 	b.w	80010fc <_fflush_r>
 80005f0:	bd10      	pop	{r4, pc}
 80005f2:	bf00      	nop
 80005f4:	2000007c 	.word	0x2000007c
 80005f8:	200000e4 	.word	0x200000e4
 80005fc:	2000014c 	.word	0x2000014c

08000600 <global_stdio_init.part.0>:
 8000600:	b510      	push	{r4, lr}
 8000602:	4b0b      	ldr	r3, [pc, #44]	@ (8000630 <global_stdio_init.part.0+0x30>)
 8000604:	4c0b      	ldr	r4, [pc, #44]	@ (8000634 <global_stdio_init.part.0+0x34>)
 8000606:	4a0c      	ldr	r2, [pc, #48]	@ (8000638 <global_stdio_init.part.0+0x38>)
 8000608:	601a      	str	r2, [r3, #0]
 800060a:	4620      	mov	r0, r4
 800060c:	2200      	movs	r2, #0
 800060e:	2104      	movs	r1, #4
 8000610:	f7ff ff94 	bl	800053c <std>
 8000614:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 8000618:	2201      	movs	r2, #1
 800061a:	2109      	movs	r1, #9
 800061c:	f7ff ff8e 	bl	800053c <std>
 8000620:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8000624:	2202      	movs	r2, #2
 8000626:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800062a:	2112      	movs	r1, #18
 800062c:	f7ff bf86 	b.w	800053c <std>
 8000630:	200001b4 	.word	0x200001b4
 8000634:	2000007c 	.word	0x2000007c
 8000638:	080005a9 	.word	0x080005a9

0800063c <__sfp_lock_acquire>:
 800063c:	4801      	ldr	r0, [pc, #4]	@ (8000644 <__sfp_lock_acquire+0x8>)
 800063e:	f000 b90e 	b.w	800085e <__retarget_lock_acquire_recursive>
 8000642:	bf00      	nop
 8000644:	200001bd 	.word	0x200001bd

08000648 <__sfp_lock_release>:
 8000648:	4801      	ldr	r0, [pc, #4]	@ (8000650 <__sfp_lock_release+0x8>)
 800064a:	f000 b909 	b.w	8000860 <__retarget_lock_release_recursive>
 800064e:	bf00      	nop
 8000650:	200001bd 	.word	0x200001bd

08000654 <__sinit>:
 8000654:	b510      	push	{r4, lr}
 8000656:	4604      	mov	r4, r0
 8000658:	f7ff fff0 	bl	800063c <__sfp_lock_acquire>
 800065c:	6a23      	ldr	r3, [r4, #32]
 800065e:	b11b      	cbz	r3, 8000668 <__sinit+0x14>
 8000660:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000664:	f7ff bff0 	b.w	8000648 <__sfp_lock_release>
 8000668:	4b04      	ldr	r3, [pc, #16]	@ (800067c <__sinit+0x28>)
 800066a:	6223      	str	r3, [r4, #32]
 800066c:	4b04      	ldr	r3, [pc, #16]	@ (8000680 <__sinit+0x2c>)
 800066e:	681b      	ldr	r3, [r3, #0]
 8000670:	2b00      	cmp	r3, #0
 8000672:	d1f5      	bne.n	8000660 <__sinit+0xc>
 8000674:	f7ff ffc4 	bl	8000600 <global_stdio_init.part.0>
 8000678:	e7f2      	b.n	8000660 <__sinit+0xc>
 800067a:	bf00      	nop
 800067c:	080005c1 	.word	0x080005c1
 8000680:	200001b4 	.word	0x200001b4

08000684 <_fwalk_sglue>:
 8000684:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000688:	4607      	mov	r7, r0
 800068a:	4688      	mov	r8, r1
 800068c:	4614      	mov	r4, r2
 800068e:	2600      	movs	r6, #0
 8000690:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000694:	f1b9 0901 	subs.w	r9, r9, #1
 8000698:	d505      	bpl.n	80006a6 <_fwalk_sglue+0x22>
 800069a:	6824      	ldr	r4, [r4, #0]
 800069c:	2c00      	cmp	r4, #0
 800069e:	d1f7      	bne.n	8000690 <_fwalk_sglue+0xc>
 80006a0:	4630      	mov	r0, r6
 80006a2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80006a6:	89ab      	ldrh	r3, [r5, #12]
 80006a8:	2b01      	cmp	r3, #1
 80006aa:	d907      	bls.n	80006bc <_fwalk_sglue+0x38>
 80006ac:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80006b0:	3301      	adds	r3, #1
 80006b2:	d003      	beq.n	80006bc <_fwalk_sglue+0x38>
 80006b4:	4629      	mov	r1, r5
 80006b6:	4638      	mov	r0, r7
 80006b8:	47c0      	blx	r8
 80006ba:	4306      	orrs	r6, r0
 80006bc:	3568      	adds	r5, #104	@ 0x68
 80006be:	e7e9      	b.n	8000694 <_fwalk_sglue+0x10>

080006c0 <iprintf>:
 80006c0:	b40f      	push	{r0, r1, r2, r3}
 80006c2:	b507      	push	{r0, r1, r2, lr}
 80006c4:	4906      	ldr	r1, [pc, #24]	@ (80006e0 <iprintf+0x20>)
 80006c6:	ab04      	add	r3, sp, #16
 80006c8:	6808      	ldr	r0, [r1, #0]
 80006ca:	f853 2b04 	ldr.w	r2, [r3], #4
 80006ce:	6881      	ldr	r1, [r0, #8]
 80006d0:	9301      	str	r3, [sp, #4]
 80006d2:	f000 f9e9 	bl	8000aa8 <_vfiprintf_r>
 80006d6:	b003      	add	sp, #12
 80006d8:	f85d eb04 	ldr.w	lr, [sp], #4
 80006dc:	b004      	add	sp, #16
 80006de:	4770      	bx	lr
 80006e0:	2000000c 	.word	0x2000000c

080006e4 <__sread>:
 80006e4:	b510      	push	{r4, lr}
 80006e6:	460c      	mov	r4, r1
 80006e8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80006ec:	f000 f868 	bl	80007c0 <_read_r>
 80006f0:	2800      	cmp	r0, #0
 80006f2:	bfab      	itete	ge
 80006f4:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 80006f6:	89a3      	ldrhlt	r3, [r4, #12]
 80006f8:	181b      	addge	r3, r3, r0
 80006fa:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 80006fe:	bfac      	ite	ge
 8000700:	6563      	strge	r3, [r4, #84]	@ 0x54
 8000702:	81a3      	strhlt	r3, [r4, #12]
 8000704:	bd10      	pop	{r4, pc}

08000706 <__swrite>:
 8000706:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800070a:	461f      	mov	r7, r3
 800070c:	898b      	ldrh	r3, [r1, #12]
 800070e:	05db      	lsls	r3, r3, #23
 8000710:	4605      	mov	r5, r0
 8000712:	460c      	mov	r4, r1
 8000714:	4616      	mov	r6, r2
 8000716:	d505      	bpl.n	8000724 <__swrite+0x1e>
 8000718:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800071c:	2302      	movs	r3, #2
 800071e:	2200      	movs	r2, #0
 8000720:	f000 f83c 	bl	800079c <_lseek_r>
 8000724:	89a3      	ldrh	r3, [r4, #12]
 8000726:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800072a:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 800072e:	81a3      	strh	r3, [r4, #12]
 8000730:	4632      	mov	r2, r6
 8000732:	463b      	mov	r3, r7
 8000734:	4628      	mov	r0, r5
 8000736:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800073a:	f000 b853 	b.w	80007e4 <_write_r>

0800073e <__sseek>:
 800073e:	b510      	push	{r4, lr}
 8000740:	460c      	mov	r4, r1
 8000742:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000746:	f000 f829 	bl	800079c <_lseek_r>
 800074a:	1c43      	adds	r3, r0, #1
 800074c:	89a3      	ldrh	r3, [r4, #12]
 800074e:	bf15      	itete	ne
 8000750:	6560      	strne	r0, [r4, #84]	@ 0x54
 8000752:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 8000756:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 800075a:	81a3      	strheq	r3, [r4, #12]
 800075c:	bf18      	it	ne
 800075e:	81a3      	strhne	r3, [r4, #12]
 8000760:	bd10      	pop	{r4, pc}

08000762 <__sclose>:
 8000762:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000766:	f000 b809 	b.w	800077c <_close_r>

0800076a <memset>:
 800076a:	4402      	add	r2, r0
 800076c:	4603      	mov	r3, r0
 800076e:	4293      	cmp	r3, r2
 8000770:	d100      	bne.n	8000774 <memset+0xa>
 8000772:	4770      	bx	lr
 8000774:	f803 1b01 	strb.w	r1, [r3], #1
 8000778:	e7f9      	b.n	800076e <memset+0x4>
	...

0800077c <_close_r>:
 800077c:	b538      	push	{r3, r4, r5, lr}
 800077e:	4d06      	ldr	r5, [pc, #24]	@ (8000798 <_close_r+0x1c>)
 8000780:	2300      	movs	r3, #0
 8000782:	4604      	mov	r4, r0
 8000784:	4608      	mov	r0, r1
 8000786:	602b      	str	r3, [r5, #0]
 8000788:	f7ff fdd3 	bl	8000332 <_close>
 800078c:	1c43      	adds	r3, r0, #1
 800078e:	d102      	bne.n	8000796 <_close_r+0x1a>
 8000790:	682b      	ldr	r3, [r5, #0]
 8000792:	b103      	cbz	r3, 8000796 <_close_r+0x1a>
 8000794:	6023      	str	r3, [r4, #0]
 8000796:	bd38      	pop	{r3, r4, r5, pc}
 8000798:	200001b8 	.word	0x200001b8

0800079c <_lseek_r>:
 800079c:	b538      	push	{r3, r4, r5, lr}
 800079e:	4d07      	ldr	r5, [pc, #28]	@ (80007bc <_lseek_r+0x20>)
 80007a0:	4604      	mov	r4, r0
 80007a2:	4608      	mov	r0, r1
 80007a4:	4611      	mov	r1, r2
 80007a6:	2200      	movs	r2, #0
 80007a8:	602a      	str	r2, [r5, #0]
 80007aa:	461a      	mov	r2, r3
 80007ac:	f7ff fde8 	bl	8000380 <_lseek>
 80007b0:	1c43      	adds	r3, r0, #1
 80007b2:	d102      	bne.n	80007ba <_lseek_r+0x1e>
 80007b4:	682b      	ldr	r3, [r5, #0]
 80007b6:	b103      	cbz	r3, 80007ba <_lseek_r+0x1e>
 80007b8:	6023      	str	r3, [r4, #0]
 80007ba:	bd38      	pop	{r3, r4, r5, pc}
 80007bc:	200001b8 	.word	0x200001b8

080007c0 <_read_r>:
 80007c0:	b538      	push	{r3, r4, r5, lr}
 80007c2:	4d07      	ldr	r5, [pc, #28]	@ (80007e0 <_read_r+0x20>)
 80007c4:	4604      	mov	r4, r0
 80007c6:	4608      	mov	r0, r1
 80007c8:	4611      	mov	r1, r2
 80007ca:	2200      	movs	r2, #0
 80007cc:	602a      	str	r2, [r5, #0]
 80007ce:	461a      	mov	r2, r3
 80007d0:	f7ff fd76 	bl	80002c0 <_read>
 80007d4:	1c43      	adds	r3, r0, #1
 80007d6:	d102      	bne.n	80007de <_read_r+0x1e>
 80007d8:	682b      	ldr	r3, [r5, #0]
 80007da:	b103      	cbz	r3, 80007de <_read_r+0x1e>
 80007dc:	6023      	str	r3, [r4, #0]
 80007de:	bd38      	pop	{r3, r4, r5, pc}
 80007e0:	200001b8 	.word	0x200001b8

080007e4 <_write_r>:
 80007e4:	b538      	push	{r3, r4, r5, lr}
 80007e6:	4d07      	ldr	r5, [pc, #28]	@ (8000804 <_write_r+0x20>)
 80007e8:	4604      	mov	r4, r0
 80007ea:	4608      	mov	r0, r1
 80007ec:	4611      	mov	r1, r2
 80007ee:	2200      	movs	r2, #0
 80007f0:	602a      	str	r2, [r5, #0]
 80007f2:	461a      	mov	r2, r3
 80007f4:	f7ff fd81 	bl	80002fa <_write>
 80007f8:	1c43      	adds	r3, r0, #1
 80007fa:	d102      	bne.n	8000802 <_write_r+0x1e>
 80007fc:	682b      	ldr	r3, [r5, #0]
 80007fe:	b103      	cbz	r3, 8000802 <_write_r+0x1e>
 8000800:	6023      	str	r3, [r4, #0]
 8000802:	bd38      	pop	{r3, r4, r5, pc}
 8000804:	200001b8 	.word	0x200001b8

08000808 <__errno>:
 8000808:	4b01      	ldr	r3, [pc, #4]	@ (8000810 <__errno+0x8>)
 800080a:	6818      	ldr	r0, [r3, #0]
 800080c:	4770      	bx	lr
 800080e:	bf00      	nop
 8000810:	2000000c 	.word	0x2000000c

08000814 <__libc_init_array>:
 8000814:	b570      	push	{r4, r5, r6, lr}
 8000816:	4d0d      	ldr	r5, [pc, #52]	@ (800084c <__libc_init_array+0x38>)
 8000818:	4c0d      	ldr	r4, [pc, #52]	@ (8000850 <__libc_init_array+0x3c>)
 800081a:	1b64      	subs	r4, r4, r5
 800081c:	10a4      	asrs	r4, r4, #2
 800081e:	2600      	movs	r6, #0
 8000820:	42a6      	cmp	r6, r4
 8000822:	d109      	bne.n	8000838 <__libc_init_array+0x24>
 8000824:	4d0b      	ldr	r5, [pc, #44]	@ (8000854 <__libc_init_array+0x40>)
 8000826:	4c0c      	ldr	r4, [pc, #48]	@ (8000858 <__libc_init_array+0x44>)
 8000828:	f000 fdb8 	bl	800139c <_init>
 800082c:	1b64      	subs	r4, r4, r5
 800082e:	10a4      	asrs	r4, r4, #2
 8000830:	2600      	movs	r6, #0
 8000832:	42a6      	cmp	r6, r4
 8000834:	d105      	bne.n	8000842 <__libc_init_array+0x2e>
 8000836:	bd70      	pop	{r4, r5, r6, pc}
 8000838:	f855 3b04 	ldr.w	r3, [r5], #4
 800083c:	4798      	blx	r3
 800083e:	3601      	adds	r6, #1
 8000840:	e7ee      	b.n	8000820 <__libc_init_array+0xc>
 8000842:	f855 3b04 	ldr.w	r3, [r5], #4
 8000846:	4798      	blx	r3
 8000848:	3601      	adds	r6, #1
 800084a:	e7f2      	b.n	8000832 <__libc_init_array+0x1e>
 800084c:	0800140c 	.word	0x0800140c
 8000850:	0800140c 	.word	0x0800140c
 8000854:	0800140c 	.word	0x0800140c
 8000858:	08001410 	.word	0x08001410

0800085c <__retarget_lock_init_recursive>:
 800085c:	4770      	bx	lr

0800085e <__retarget_lock_acquire_recursive>:
 800085e:	4770      	bx	lr

08000860 <__retarget_lock_release_recursive>:
 8000860:	4770      	bx	lr
	...

08000864 <_free_r>:
 8000864:	b538      	push	{r3, r4, r5, lr}
 8000866:	4605      	mov	r5, r0
 8000868:	2900      	cmp	r1, #0
 800086a:	d041      	beq.n	80008f0 <_free_r+0x8c>
 800086c:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000870:	1f0c      	subs	r4, r1, #4
 8000872:	2b00      	cmp	r3, #0
 8000874:	bfb8      	it	lt
 8000876:	18e4      	addlt	r4, r4, r3
 8000878:	f000 f8e0 	bl	8000a3c <__malloc_lock>
 800087c:	4a1d      	ldr	r2, [pc, #116]	@ (80008f4 <_free_r+0x90>)
 800087e:	6813      	ldr	r3, [r2, #0]
 8000880:	b933      	cbnz	r3, 8000890 <_free_r+0x2c>
 8000882:	6063      	str	r3, [r4, #4]
 8000884:	6014      	str	r4, [r2, #0]
 8000886:	4628      	mov	r0, r5
 8000888:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800088c:	f000 b8dc 	b.w	8000a48 <__malloc_unlock>
 8000890:	42a3      	cmp	r3, r4
 8000892:	d908      	bls.n	80008a6 <_free_r+0x42>
 8000894:	6820      	ldr	r0, [r4, #0]
 8000896:	1821      	adds	r1, r4, r0
 8000898:	428b      	cmp	r3, r1
 800089a:	bf01      	itttt	eq
 800089c:	6819      	ldreq	r1, [r3, #0]
 800089e:	685b      	ldreq	r3, [r3, #4]
 80008a0:	1809      	addeq	r1, r1, r0
 80008a2:	6021      	streq	r1, [r4, #0]
 80008a4:	e7ed      	b.n	8000882 <_free_r+0x1e>
 80008a6:	461a      	mov	r2, r3
 80008a8:	685b      	ldr	r3, [r3, #4]
 80008aa:	b10b      	cbz	r3, 80008b0 <_free_r+0x4c>
 80008ac:	42a3      	cmp	r3, r4
 80008ae:	d9fa      	bls.n	80008a6 <_free_r+0x42>
 80008b0:	6811      	ldr	r1, [r2, #0]
 80008b2:	1850      	adds	r0, r2, r1
 80008b4:	42a0      	cmp	r0, r4
 80008b6:	d10b      	bne.n	80008d0 <_free_r+0x6c>
 80008b8:	6820      	ldr	r0, [r4, #0]
 80008ba:	4401      	add	r1, r0
 80008bc:	1850      	adds	r0, r2, r1
 80008be:	4283      	cmp	r3, r0
 80008c0:	6011      	str	r1, [r2, #0]
 80008c2:	d1e0      	bne.n	8000886 <_free_r+0x22>
 80008c4:	6818      	ldr	r0, [r3, #0]
 80008c6:	685b      	ldr	r3, [r3, #4]
 80008c8:	6053      	str	r3, [r2, #4]
 80008ca:	4408      	add	r0, r1
 80008cc:	6010      	str	r0, [r2, #0]
 80008ce:	e7da      	b.n	8000886 <_free_r+0x22>
 80008d0:	d902      	bls.n	80008d8 <_free_r+0x74>
 80008d2:	230c      	movs	r3, #12
 80008d4:	602b      	str	r3, [r5, #0]
 80008d6:	e7d6      	b.n	8000886 <_free_r+0x22>
 80008d8:	6820      	ldr	r0, [r4, #0]
 80008da:	1821      	adds	r1, r4, r0
 80008dc:	428b      	cmp	r3, r1
 80008de:	bf04      	itt	eq
 80008e0:	6819      	ldreq	r1, [r3, #0]
 80008e2:	685b      	ldreq	r3, [r3, #4]
 80008e4:	6063      	str	r3, [r4, #4]
 80008e6:	bf04      	itt	eq
 80008e8:	1809      	addeq	r1, r1, r0
 80008ea:	6021      	streq	r1, [r4, #0]
 80008ec:	6054      	str	r4, [r2, #4]
 80008ee:	e7ca      	b.n	8000886 <_free_r+0x22>
 80008f0:	bd38      	pop	{r3, r4, r5, pc}
 80008f2:	bf00      	nop
 80008f4:	200001c4 	.word	0x200001c4

080008f8 <sbrk_aligned>:
 80008f8:	b570      	push	{r4, r5, r6, lr}
 80008fa:	4e0f      	ldr	r6, [pc, #60]	@ (8000938 <sbrk_aligned+0x40>)
 80008fc:	460c      	mov	r4, r1
 80008fe:	6831      	ldr	r1, [r6, #0]
 8000900:	4605      	mov	r5, r0
 8000902:	b911      	cbnz	r1, 800090a <sbrk_aligned+0x12>
 8000904:	f000 fcb6 	bl	8001274 <_sbrk_r>
 8000908:	6030      	str	r0, [r6, #0]
 800090a:	4621      	mov	r1, r4
 800090c:	4628      	mov	r0, r5
 800090e:	f000 fcb1 	bl	8001274 <_sbrk_r>
 8000912:	1c43      	adds	r3, r0, #1
 8000914:	d103      	bne.n	800091e <sbrk_aligned+0x26>
 8000916:	f04f 34ff 	mov.w	r4, #4294967295
 800091a:	4620      	mov	r0, r4
 800091c:	bd70      	pop	{r4, r5, r6, pc}
 800091e:	1cc4      	adds	r4, r0, #3
 8000920:	f024 0403 	bic.w	r4, r4, #3
 8000924:	42a0      	cmp	r0, r4
 8000926:	d0f8      	beq.n	800091a <sbrk_aligned+0x22>
 8000928:	1a21      	subs	r1, r4, r0
 800092a:	4628      	mov	r0, r5
 800092c:	f000 fca2 	bl	8001274 <_sbrk_r>
 8000930:	3001      	adds	r0, #1
 8000932:	d1f2      	bne.n	800091a <sbrk_aligned+0x22>
 8000934:	e7ef      	b.n	8000916 <sbrk_aligned+0x1e>
 8000936:	bf00      	nop
 8000938:	200001c0 	.word	0x200001c0

0800093c <_malloc_r>:
 800093c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000940:	1ccd      	adds	r5, r1, #3
 8000942:	f025 0503 	bic.w	r5, r5, #3
 8000946:	3508      	adds	r5, #8
 8000948:	2d0c      	cmp	r5, #12
 800094a:	bf38      	it	cc
 800094c:	250c      	movcc	r5, #12
 800094e:	2d00      	cmp	r5, #0
 8000950:	4606      	mov	r6, r0
 8000952:	db01      	blt.n	8000958 <_malloc_r+0x1c>
 8000954:	42a9      	cmp	r1, r5
 8000956:	d904      	bls.n	8000962 <_malloc_r+0x26>
 8000958:	230c      	movs	r3, #12
 800095a:	6033      	str	r3, [r6, #0]
 800095c:	2000      	movs	r0, #0
 800095e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000962:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8000a38 <_malloc_r+0xfc>
 8000966:	f000 f869 	bl	8000a3c <__malloc_lock>
 800096a:	f8d8 3000 	ldr.w	r3, [r8]
 800096e:	461c      	mov	r4, r3
 8000970:	bb44      	cbnz	r4, 80009c4 <_malloc_r+0x88>
 8000972:	4629      	mov	r1, r5
 8000974:	4630      	mov	r0, r6
 8000976:	f7ff ffbf 	bl	80008f8 <sbrk_aligned>
 800097a:	1c43      	adds	r3, r0, #1
 800097c:	4604      	mov	r4, r0
 800097e:	d158      	bne.n	8000a32 <_malloc_r+0xf6>
 8000980:	f8d8 4000 	ldr.w	r4, [r8]
 8000984:	4627      	mov	r7, r4
 8000986:	2f00      	cmp	r7, #0
 8000988:	d143      	bne.n	8000a12 <_malloc_r+0xd6>
 800098a:	2c00      	cmp	r4, #0
 800098c:	d04b      	beq.n	8000a26 <_malloc_r+0xea>
 800098e:	6823      	ldr	r3, [r4, #0]
 8000990:	4639      	mov	r1, r7
 8000992:	4630      	mov	r0, r6
 8000994:	eb04 0903 	add.w	r9, r4, r3
 8000998:	f000 fc6c 	bl	8001274 <_sbrk_r>
 800099c:	4581      	cmp	r9, r0
 800099e:	d142      	bne.n	8000a26 <_malloc_r+0xea>
 80009a0:	6821      	ldr	r1, [r4, #0]
 80009a2:	1a6d      	subs	r5, r5, r1
 80009a4:	4629      	mov	r1, r5
 80009a6:	4630      	mov	r0, r6
 80009a8:	f7ff ffa6 	bl	80008f8 <sbrk_aligned>
 80009ac:	3001      	adds	r0, #1
 80009ae:	d03a      	beq.n	8000a26 <_malloc_r+0xea>
 80009b0:	6823      	ldr	r3, [r4, #0]
 80009b2:	442b      	add	r3, r5
 80009b4:	6023      	str	r3, [r4, #0]
 80009b6:	f8d8 3000 	ldr.w	r3, [r8]
 80009ba:	685a      	ldr	r2, [r3, #4]
 80009bc:	bb62      	cbnz	r2, 8000a18 <_malloc_r+0xdc>
 80009be:	f8c8 7000 	str.w	r7, [r8]
 80009c2:	e00f      	b.n	80009e4 <_malloc_r+0xa8>
 80009c4:	6822      	ldr	r2, [r4, #0]
 80009c6:	1b52      	subs	r2, r2, r5
 80009c8:	d420      	bmi.n	8000a0c <_malloc_r+0xd0>
 80009ca:	2a0b      	cmp	r2, #11
 80009cc:	d917      	bls.n	80009fe <_malloc_r+0xc2>
 80009ce:	1961      	adds	r1, r4, r5
 80009d0:	42a3      	cmp	r3, r4
 80009d2:	6025      	str	r5, [r4, #0]
 80009d4:	bf18      	it	ne
 80009d6:	6059      	strne	r1, [r3, #4]
 80009d8:	6863      	ldr	r3, [r4, #4]
 80009da:	bf08      	it	eq
 80009dc:	f8c8 1000 	streq.w	r1, [r8]
 80009e0:	5162      	str	r2, [r4, r5]
 80009e2:	604b      	str	r3, [r1, #4]
 80009e4:	4630      	mov	r0, r6
 80009e6:	f000 f82f 	bl	8000a48 <__malloc_unlock>
 80009ea:	f104 000b 	add.w	r0, r4, #11
 80009ee:	1d23      	adds	r3, r4, #4
 80009f0:	f020 0007 	bic.w	r0, r0, #7
 80009f4:	1ac2      	subs	r2, r0, r3
 80009f6:	bf1c      	itt	ne
 80009f8:	1a1b      	subne	r3, r3, r0
 80009fa:	50a3      	strne	r3, [r4, r2]
 80009fc:	e7af      	b.n	800095e <_malloc_r+0x22>
 80009fe:	6862      	ldr	r2, [r4, #4]
 8000a00:	42a3      	cmp	r3, r4
 8000a02:	bf0c      	ite	eq
 8000a04:	f8c8 2000 	streq.w	r2, [r8]
 8000a08:	605a      	strne	r2, [r3, #4]
 8000a0a:	e7eb      	b.n	80009e4 <_malloc_r+0xa8>
 8000a0c:	4623      	mov	r3, r4
 8000a0e:	6864      	ldr	r4, [r4, #4]
 8000a10:	e7ae      	b.n	8000970 <_malloc_r+0x34>
 8000a12:	463c      	mov	r4, r7
 8000a14:	687f      	ldr	r7, [r7, #4]
 8000a16:	e7b6      	b.n	8000986 <_malloc_r+0x4a>
 8000a18:	461a      	mov	r2, r3
 8000a1a:	685b      	ldr	r3, [r3, #4]
 8000a1c:	42a3      	cmp	r3, r4
 8000a1e:	d1fb      	bne.n	8000a18 <_malloc_r+0xdc>
 8000a20:	2300      	movs	r3, #0
 8000a22:	6053      	str	r3, [r2, #4]
 8000a24:	e7de      	b.n	80009e4 <_malloc_r+0xa8>
 8000a26:	230c      	movs	r3, #12
 8000a28:	6033      	str	r3, [r6, #0]
 8000a2a:	4630      	mov	r0, r6
 8000a2c:	f000 f80c 	bl	8000a48 <__malloc_unlock>
 8000a30:	e794      	b.n	800095c <_malloc_r+0x20>
 8000a32:	6005      	str	r5, [r0, #0]
 8000a34:	e7d6      	b.n	80009e4 <_malloc_r+0xa8>
 8000a36:	bf00      	nop
 8000a38:	200001c4 	.word	0x200001c4

08000a3c <__malloc_lock>:
 8000a3c:	4801      	ldr	r0, [pc, #4]	@ (8000a44 <__malloc_lock+0x8>)
 8000a3e:	f7ff bf0e 	b.w	800085e <__retarget_lock_acquire_recursive>
 8000a42:	bf00      	nop
 8000a44:	200001bc 	.word	0x200001bc

08000a48 <__malloc_unlock>:
 8000a48:	4801      	ldr	r0, [pc, #4]	@ (8000a50 <__malloc_unlock+0x8>)
 8000a4a:	f7ff bf09 	b.w	8000860 <__retarget_lock_release_recursive>
 8000a4e:	bf00      	nop
 8000a50:	200001bc 	.word	0x200001bc

08000a54 <__sfputc_r>:
 8000a54:	6893      	ldr	r3, [r2, #8]
 8000a56:	3b01      	subs	r3, #1
 8000a58:	2b00      	cmp	r3, #0
 8000a5a:	b410      	push	{r4}
 8000a5c:	6093      	str	r3, [r2, #8]
 8000a5e:	da08      	bge.n	8000a72 <__sfputc_r+0x1e>
 8000a60:	6994      	ldr	r4, [r2, #24]
 8000a62:	42a3      	cmp	r3, r4
 8000a64:	db01      	blt.n	8000a6a <__sfputc_r+0x16>
 8000a66:	290a      	cmp	r1, #10
 8000a68:	d103      	bne.n	8000a72 <__sfputc_r+0x1e>
 8000a6a:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000a6e:	f000 bb6d 	b.w	800114c <__swbuf_r>
 8000a72:	6813      	ldr	r3, [r2, #0]
 8000a74:	1c58      	adds	r0, r3, #1
 8000a76:	6010      	str	r0, [r2, #0]
 8000a78:	7019      	strb	r1, [r3, #0]
 8000a7a:	4608      	mov	r0, r1
 8000a7c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8000a80:	4770      	bx	lr

08000a82 <__sfputs_r>:
 8000a82:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000a84:	4606      	mov	r6, r0
 8000a86:	460f      	mov	r7, r1
 8000a88:	4614      	mov	r4, r2
 8000a8a:	18d5      	adds	r5, r2, r3
 8000a8c:	42ac      	cmp	r4, r5
 8000a8e:	d101      	bne.n	8000a94 <__sfputs_r+0x12>
 8000a90:	2000      	movs	r0, #0
 8000a92:	e007      	b.n	8000aa4 <__sfputs_r+0x22>
 8000a94:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000a98:	463a      	mov	r2, r7
 8000a9a:	4630      	mov	r0, r6
 8000a9c:	f7ff ffda 	bl	8000a54 <__sfputc_r>
 8000aa0:	1c43      	adds	r3, r0, #1
 8000aa2:	d1f3      	bne.n	8000a8c <__sfputs_r+0xa>
 8000aa4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000aa8 <_vfiprintf_r>:
 8000aa8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000aac:	460d      	mov	r5, r1
 8000aae:	b09d      	sub	sp, #116	@ 0x74
 8000ab0:	4614      	mov	r4, r2
 8000ab2:	4698      	mov	r8, r3
 8000ab4:	4606      	mov	r6, r0
 8000ab6:	b118      	cbz	r0, 8000ac0 <_vfiprintf_r+0x18>
 8000ab8:	6a03      	ldr	r3, [r0, #32]
 8000aba:	b90b      	cbnz	r3, 8000ac0 <_vfiprintf_r+0x18>
 8000abc:	f7ff fdca 	bl	8000654 <__sinit>
 8000ac0:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000ac2:	07d9      	lsls	r1, r3, #31
 8000ac4:	d405      	bmi.n	8000ad2 <_vfiprintf_r+0x2a>
 8000ac6:	89ab      	ldrh	r3, [r5, #12]
 8000ac8:	059a      	lsls	r2, r3, #22
 8000aca:	d402      	bmi.n	8000ad2 <_vfiprintf_r+0x2a>
 8000acc:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000ace:	f7ff fec6 	bl	800085e <__retarget_lock_acquire_recursive>
 8000ad2:	89ab      	ldrh	r3, [r5, #12]
 8000ad4:	071b      	lsls	r3, r3, #28
 8000ad6:	d501      	bpl.n	8000adc <_vfiprintf_r+0x34>
 8000ad8:	692b      	ldr	r3, [r5, #16]
 8000ada:	b99b      	cbnz	r3, 8000b04 <_vfiprintf_r+0x5c>
 8000adc:	4629      	mov	r1, r5
 8000ade:	4630      	mov	r0, r6
 8000ae0:	f000 fb72 	bl	80011c8 <__swsetup_r>
 8000ae4:	b170      	cbz	r0, 8000b04 <_vfiprintf_r+0x5c>
 8000ae6:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000ae8:	07dc      	lsls	r4, r3, #31
 8000aea:	d504      	bpl.n	8000af6 <_vfiprintf_r+0x4e>
 8000aec:	f04f 30ff 	mov.w	r0, #4294967295
 8000af0:	b01d      	add	sp, #116	@ 0x74
 8000af2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000af6:	89ab      	ldrh	r3, [r5, #12]
 8000af8:	0598      	lsls	r0, r3, #22
 8000afa:	d4f7      	bmi.n	8000aec <_vfiprintf_r+0x44>
 8000afc:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000afe:	f7ff feaf 	bl	8000860 <__retarget_lock_release_recursive>
 8000b02:	e7f3      	b.n	8000aec <_vfiprintf_r+0x44>
 8000b04:	2300      	movs	r3, #0
 8000b06:	9309      	str	r3, [sp, #36]	@ 0x24
 8000b08:	2320      	movs	r3, #32
 8000b0a:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8000b0e:	f8cd 800c 	str.w	r8, [sp, #12]
 8000b12:	2330      	movs	r3, #48	@ 0x30
 8000b14:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 8000cc4 <_vfiprintf_r+0x21c>
 8000b18:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8000b1c:	f04f 0901 	mov.w	r9, #1
 8000b20:	4623      	mov	r3, r4
 8000b22:	469a      	mov	sl, r3
 8000b24:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000b28:	b10a      	cbz	r2, 8000b2e <_vfiprintf_r+0x86>
 8000b2a:	2a25      	cmp	r2, #37	@ 0x25
 8000b2c:	d1f9      	bne.n	8000b22 <_vfiprintf_r+0x7a>
 8000b2e:	ebba 0b04 	subs.w	fp, sl, r4
 8000b32:	d00b      	beq.n	8000b4c <_vfiprintf_r+0xa4>
 8000b34:	465b      	mov	r3, fp
 8000b36:	4622      	mov	r2, r4
 8000b38:	4629      	mov	r1, r5
 8000b3a:	4630      	mov	r0, r6
 8000b3c:	f7ff ffa1 	bl	8000a82 <__sfputs_r>
 8000b40:	3001      	adds	r0, #1
 8000b42:	f000 80a7 	beq.w	8000c94 <_vfiprintf_r+0x1ec>
 8000b46:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8000b48:	445a      	add	r2, fp
 8000b4a:	9209      	str	r2, [sp, #36]	@ 0x24
 8000b4c:	f89a 3000 	ldrb.w	r3, [sl]
 8000b50:	2b00      	cmp	r3, #0
 8000b52:	f000 809f 	beq.w	8000c94 <_vfiprintf_r+0x1ec>
 8000b56:	2300      	movs	r3, #0
 8000b58:	f04f 32ff 	mov.w	r2, #4294967295
 8000b5c:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000b60:	f10a 0a01 	add.w	sl, sl, #1
 8000b64:	9304      	str	r3, [sp, #16]
 8000b66:	9307      	str	r3, [sp, #28]
 8000b68:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8000b6c:	931a      	str	r3, [sp, #104]	@ 0x68
 8000b6e:	4654      	mov	r4, sl
 8000b70:	2205      	movs	r2, #5
 8000b72:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000b76:	4853      	ldr	r0, [pc, #332]	@ (8000cc4 <_vfiprintf_r+0x21c>)
 8000b78:	f7ff fb32 	bl	80001e0 <memchr>
 8000b7c:	9a04      	ldr	r2, [sp, #16]
 8000b7e:	b9d8      	cbnz	r0, 8000bb8 <_vfiprintf_r+0x110>
 8000b80:	06d1      	lsls	r1, r2, #27
 8000b82:	bf44      	itt	mi
 8000b84:	2320      	movmi	r3, #32
 8000b86:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000b8a:	0713      	lsls	r3, r2, #28
 8000b8c:	bf44      	itt	mi
 8000b8e:	232b      	movmi	r3, #43	@ 0x2b
 8000b90:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8000b94:	f89a 3000 	ldrb.w	r3, [sl]
 8000b98:	2b2a      	cmp	r3, #42	@ 0x2a
 8000b9a:	d015      	beq.n	8000bc8 <_vfiprintf_r+0x120>
 8000b9c:	9a07      	ldr	r2, [sp, #28]
 8000b9e:	4654      	mov	r4, sl
 8000ba0:	2000      	movs	r0, #0
 8000ba2:	f04f 0c0a 	mov.w	ip, #10
 8000ba6:	4621      	mov	r1, r4
 8000ba8:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000bac:	3b30      	subs	r3, #48	@ 0x30
 8000bae:	2b09      	cmp	r3, #9
 8000bb0:	d94b      	bls.n	8000c4a <_vfiprintf_r+0x1a2>
 8000bb2:	b1b0      	cbz	r0, 8000be2 <_vfiprintf_r+0x13a>
 8000bb4:	9207      	str	r2, [sp, #28]
 8000bb6:	e014      	b.n	8000be2 <_vfiprintf_r+0x13a>
 8000bb8:	eba0 0308 	sub.w	r3, r0, r8
 8000bbc:	fa09 f303 	lsl.w	r3, r9, r3
 8000bc0:	4313      	orrs	r3, r2
 8000bc2:	9304      	str	r3, [sp, #16]
 8000bc4:	46a2      	mov	sl, r4
 8000bc6:	e7d2      	b.n	8000b6e <_vfiprintf_r+0xc6>
 8000bc8:	9b03      	ldr	r3, [sp, #12]
 8000bca:	1d19      	adds	r1, r3, #4
 8000bcc:	681b      	ldr	r3, [r3, #0]
 8000bce:	9103      	str	r1, [sp, #12]
 8000bd0:	2b00      	cmp	r3, #0
 8000bd2:	bfbb      	ittet	lt
 8000bd4:	425b      	neglt	r3, r3
 8000bd6:	f042 0202 	orrlt.w	r2, r2, #2
 8000bda:	9307      	strge	r3, [sp, #28]
 8000bdc:	9307      	strlt	r3, [sp, #28]
 8000bde:	bfb8      	it	lt
 8000be0:	9204      	strlt	r2, [sp, #16]
 8000be2:	7823      	ldrb	r3, [r4, #0]
 8000be4:	2b2e      	cmp	r3, #46	@ 0x2e
 8000be6:	d10a      	bne.n	8000bfe <_vfiprintf_r+0x156>
 8000be8:	7863      	ldrb	r3, [r4, #1]
 8000bea:	2b2a      	cmp	r3, #42	@ 0x2a
 8000bec:	d132      	bne.n	8000c54 <_vfiprintf_r+0x1ac>
 8000bee:	9b03      	ldr	r3, [sp, #12]
 8000bf0:	1d1a      	adds	r2, r3, #4
 8000bf2:	681b      	ldr	r3, [r3, #0]
 8000bf4:	9203      	str	r2, [sp, #12]
 8000bf6:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8000bfa:	3402      	adds	r4, #2
 8000bfc:	9305      	str	r3, [sp, #20]
 8000bfe:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 8000cd4 <_vfiprintf_r+0x22c>
 8000c02:	7821      	ldrb	r1, [r4, #0]
 8000c04:	2203      	movs	r2, #3
 8000c06:	4650      	mov	r0, sl
 8000c08:	f7ff faea 	bl	80001e0 <memchr>
 8000c0c:	b138      	cbz	r0, 8000c1e <_vfiprintf_r+0x176>
 8000c0e:	9b04      	ldr	r3, [sp, #16]
 8000c10:	eba0 000a 	sub.w	r0, r0, sl
 8000c14:	2240      	movs	r2, #64	@ 0x40
 8000c16:	4082      	lsls	r2, r0
 8000c18:	4313      	orrs	r3, r2
 8000c1a:	3401      	adds	r4, #1
 8000c1c:	9304      	str	r3, [sp, #16]
 8000c1e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000c22:	4829      	ldr	r0, [pc, #164]	@ (8000cc8 <_vfiprintf_r+0x220>)
 8000c24:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8000c28:	2206      	movs	r2, #6
 8000c2a:	f7ff fad9 	bl	80001e0 <memchr>
 8000c2e:	2800      	cmp	r0, #0
 8000c30:	d03f      	beq.n	8000cb2 <_vfiprintf_r+0x20a>
 8000c32:	4b26      	ldr	r3, [pc, #152]	@ (8000ccc <_vfiprintf_r+0x224>)
 8000c34:	bb1b      	cbnz	r3, 8000c7e <_vfiprintf_r+0x1d6>
 8000c36:	9b03      	ldr	r3, [sp, #12]
 8000c38:	3307      	adds	r3, #7
 8000c3a:	f023 0307 	bic.w	r3, r3, #7
 8000c3e:	3308      	adds	r3, #8
 8000c40:	9303      	str	r3, [sp, #12]
 8000c42:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8000c44:	443b      	add	r3, r7
 8000c46:	9309      	str	r3, [sp, #36]	@ 0x24
 8000c48:	e76a      	b.n	8000b20 <_vfiprintf_r+0x78>
 8000c4a:	fb0c 3202 	mla	r2, ip, r2, r3
 8000c4e:	460c      	mov	r4, r1
 8000c50:	2001      	movs	r0, #1
 8000c52:	e7a8      	b.n	8000ba6 <_vfiprintf_r+0xfe>
 8000c54:	2300      	movs	r3, #0
 8000c56:	3401      	adds	r4, #1
 8000c58:	9305      	str	r3, [sp, #20]
 8000c5a:	4619      	mov	r1, r3
 8000c5c:	f04f 0c0a 	mov.w	ip, #10
 8000c60:	4620      	mov	r0, r4
 8000c62:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000c66:	3a30      	subs	r2, #48	@ 0x30
 8000c68:	2a09      	cmp	r2, #9
 8000c6a:	d903      	bls.n	8000c74 <_vfiprintf_r+0x1cc>
 8000c6c:	2b00      	cmp	r3, #0
 8000c6e:	d0c6      	beq.n	8000bfe <_vfiprintf_r+0x156>
 8000c70:	9105      	str	r1, [sp, #20]
 8000c72:	e7c4      	b.n	8000bfe <_vfiprintf_r+0x156>
 8000c74:	fb0c 2101 	mla	r1, ip, r1, r2
 8000c78:	4604      	mov	r4, r0
 8000c7a:	2301      	movs	r3, #1
 8000c7c:	e7f0      	b.n	8000c60 <_vfiprintf_r+0x1b8>
 8000c7e:	ab03      	add	r3, sp, #12
 8000c80:	9300      	str	r3, [sp, #0]
 8000c82:	462a      	mov	r2, r5
 8000c84:	4b12      	ldr	r3, [pc, #72]	@ (8000cd0 <_vfiprintf_r+0x228>)
 8000c86:	a904      	add	r1, sp, #16
 8000c88:	4630      	mov	r0, r6
 8000c8a:	f3af 8000 	nop.w
 8000c8e:	4607      	mov	r7, r0
 8000c90:	1c78      	adds	r0, r7, #1
 8000c92:	d1d6      	bne.n	8000c42 <_vfiprintf_r+0x19a>
 8000c94:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 8000c96:	07d9      	lsls	r1, r3, #31
 8000c98:	d405      	bmi.n	8000ca6 <_vfiprintf_r+0x1fe>
 8000c9a:	89ab      	ldrh	r3, [r5, #12]
 8000c9c:	059a      	lsls	r2, r3, #22
 8000c9e:	d402      	bmi.n	8000ca6 <_vfiprintf_r+0x1fe>
 8000ca0:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8000ca2:	f7ff fddd 	bl	8000860 <__retarget_lock_release_recursive>
 8000ca6:	89ab      	ldrh	r3, [r5, #12]
 8000ca8:	065b      	lsls	r3, r3, #25
 8000caa:	f53f af1f 	bmi.w	8000aec <_vfiprintf_r+0x44>
 8000cae:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8000cb0:	e71e      	b.n	8000af0 <_vfiprintf_r+0x48>
 8000cb2:	ab03      	add	r3, sp, #12
 8000cb4:	9300      	str	r3, [sp, #0]
 8000cb6:	462a      	mov	r2, r5
 8000cb8:	4b05      	ldr	r3, [pc, #20]	@ (8000cd0 <_vfiprintf_r+0x228>)
 8000cba:	a904      	add	r1, sp, #16
 8000cbc:	4630      	mov	r0, r6
 8000cbe:	f000 f879 	bl	8000db4 <_printf_i>
 8000cc2:	e7e4      	b.n	8000c8e <_vfiprintf_r+0x1e6>
 8000cc4:	080013d0 	.word	0x080013d0
 8000cc8:	080013da 	.word	0x080013da
 8000ccc:	00000000 	.word	0x00000000
 8000cd0:	08000a83 	.word	0x08000a83
 8000cd4:	080013d6 	.word	0x080013d6

08000cd8 <_printf_common>:
 8000cd8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000cdc:	4616      	mov	r6, r2
 8000cde:	4698      	mov	r8, r3
 8000ce0:	688a      	ldr	r2, [r1, #8]
 8000ce2:	690b      	ldr	r3, [r1, #16]
 8000ce4:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8000ce8:	4293      	cmp	r3, r2
 8000cea:	bfb8      	it	lt
 8000cec:	4613      	movlt	r3, r2
 8000cee:	6033      	str	r3, [r6, #0]
 8000cf0:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8000cf4:	4607      	mov	r7, r0
 8000cf6:	460c      	mov	r4, r1
 8000cf8:	b10a      	cbz	r2, 8000cfe <_printf_common+0x26>
 8000cfa:	3301      	adds	r3, #1
 8000cfc:	6033      	str	r3, [r6, #0]
 8000cfe:	6823      	ldr	r3, [r4, #0]
 8000d00:	0699      	lsls	r1, r3, #26
 8000d02:	bf42      	ittt	mi
 8000d04:	6833      	ldrmi	r3, [r6, #0]
 8000d06:	3302      	addmi	r3, #2
 8000d08:	6033      	strmi	r3, [r6, #0]
 8000d0a:	6825      	ldr	r5, [r4, #0]
 8000d0c:	f015 0506 	ands.w	r5, r5, #6
 8000d10:	d106      	bne.n	8000d20 <_printf_common+0x48>
 8000d12:	f104 0a19 	add.w	sl, r4, #25
 8000d16:	68e3      	ldr	r3, [r4, #12]
 8000d18:	6832      	ldr	r2, [r6, #0]
 8000d1a:	1a9b      	subs	r3, r3, r2
 8000d1c:	42ab      	cmp	r3, r5
 8000d1e:	dc26      	bgt.n	8000d6e <_printf_common+0x96>
 8000d20:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8000d24:	6822      	ldr	r2, [r4, #0]
 8000d26:	3b00      	subs	r3, #0
 8000d28:	bf18      	it	ne
 8000d2a:	2301      	movne	r3, #1
 8000d2c:	0692      	lsls	r2, r2, #26
 8000d2e:	d42b      	bmi.n	8000d88 <_printf_common+0xb0>
 8000d30:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8000d34:	4641      	mov	r1, r8
 8000d36:	4638      	mov	r0, r7
 8000d38:	47c8      	blx	r9
 8000d3a:	3001      	adds	r0, #1
 8000d3c:	d01e      	beq.n	8000d7c <_printf_common+0xa4>
 8000d3e:	6823      	ldr	r3, [r4, #0]
 8000d40:	6922      	ldr	r2, [r4, #16]
 8000d42:	f003 0306 	and.w	r3, r3, #6
 8000d46:	2b04      	cmp	r3, #4
 8000d48:	bf02      	ittt	eq
 8000d4a:	68e5      	ldreq	r5, [r4, #12]
 8000d4c:	6833      	ldreq	r3, [r6, #0]
 8000d4e:	1aed      	subeq	r5, r5, r3
 8000d50:	68a3      	ldr	r3, [r4, #8]
 8000d52:	bf0c      	ite	eq
 8000d54:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8000d58:	2500      	movne	r5, #0
 8000d5a:	4293      	cmp	r3, r2
 8000d5c:	bfc4      	itt	gt
 8000d5e:	1a9b      	subgt	r3, r3, r2
 8000d60:	18ed      	addgt	r5, r5, r3
 8000d62:	2600      	movs	r6, #0
 8000d64:	341a      	adds	r4, #26
 8000d66:	42b5      	cmp	r5, r6
 8000d68:	d11a      	bne.n	8000da0 <_printf_common+0xc8>
 8000d6a:	2000      	movs	r0, #0
 8000d6c:	e008      	b.n	8000d80 <_printf_common+0xa8>
 8000d6e:	2301      	movs	r3, #1
 8000d70:	4652      	mov	r2, sl
 8000d72:	4641      	mov	r1, r8
 8000d74:	4638      	mov	r0, r7
 8000d76:	47c8      	blx	r9
 8000d78:	3001      	adds	r0, #1
 8000d7a:	d103      	bne.n	8000d84 <_printf_common+0xac>
 8000d7c:	f04f 30ff 	mov.w	r0, #4294967295
 8000d80:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d84:	3501      	adds	r5, #1
 8000d86:	e7c6      	b.n	8000d16 <_printf_common+0x3e>
 8000d88:	18e1      	adds	r1, r4, r3
 8000d8a:	1c5a      	adds	r2, r3, #1
 8000d8c:	2030      	movs	r0, #48	@ 0x30
 8000d8e:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8000d92:	4422      	add	r2, r4
 8000d94:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8000d98:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8000d9c:	3302      	adds	r3, #2
 8000d9e:	e7c7      	b.n	8000d30 <_printf_common+0x58>
 8000da0:	2301      	movs	r3, #1
 8000da2:	4622      	mov	r2, r4
 8000da4:	4641      	mov	r1, r8
 8000da6:	4638      	mov	r0, r7
 8000da8:	47c8      	blx	r9
 8000daa:	3001      	adds	r0, #1
 8000dac:	d0e6      	beq.n	8000d7c <_printf_common+0xa4>
 8000dae:	3601      	adds	r6, #1
 8000db0:	e7d9      	b.n	8000d66 <_printf_common+0x8e>
	...

08000db4 <_printf_i>:
 8000db4:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8000db8:	7e0f      	ldrb	r7, [r1, #24]
 8000dba:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8000dbc:	2f78      	cmp	r7, #120	@ 0x78
 8000dbe:	4691      	mov	r9, r2
 8000dc0:	4680      	mov	r8, r0
 8000dc2:	460c      	mov	r4, r1
 8000dc4:	469a      	mov	sl, r3
 8000dc6:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8000dca:	d807      	bhi.n	8000ddc <_printf_i+0x28>
 8000dcc:	2f62      	cmp	r7, #98	@ 0x62
 8000dce:	d80a      	bhi.n	8000de6 <_printf_i+0x32>
 8000dd0:	2f00      	cmp	r7, #0
 8000dd2:	f000 80d2 	beq.w	8000f7a <_printf_i+0x1c6>
 8000dd6:	2f58      	cmp	r7, #88	@ 0x58
 8000dd8:	f000 80b9 	beq.w	8000f4e <_printf_i+0x19a>
 8000ddc:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000de0:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8000de4:	e03a      	b.n	8000e5c <_printf_i+0xa8>
 8000de6:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8000dea:	2b15      	cmp	r3, #21
 8000dec:	d8f6      	bhi.n	8000ddc <_printf_i+0x28>
 8000dee:	a101      	add	r1, pc, #4	@ (adr r1, 8000df4 <_printf_i+0x40>)
 8000df0:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000df4:	08000e4d 	.word	0x08000e4d
 8000df8:	08000e61 	.word	0x08000e61
 8000dfc:	08000ddd 	.word	0x08000ddd
 8000e00:	08000ddd 	.word	0x08000ddd
 8000e04:	08000ddd 	.word	0x08000ddd
 8000e08:	08000ddd 	.word	0x08000ddd
 8000e0c:	08000e61 	.word	0x08000e61
 8000e10:	08000ddd 	.word	0x08000ddd
 8000e14:	08000ddd 	.word	0x08000ddd
 8000e18:	08000ddd 	.word	0x08000ddd
 8000e1c:	08000ddd 	.word	0x08000ddd
 8000e20:	08000f61 	.word	0x08000f61
 8000e24:	08000e8b 	.word	0x08000e8b
 8000e28:	08000f1b 	.word	0x08000f1b
 8000e2c:	08000ddd 	.word	0x08000ddd
 8000e30:	08000ddd 	.word	0x08000ddd
 8000e34:	08000f83 	.word	0x08000f83
 8000e38:	08000ddd 	.word	0x08000ddd
 8000e3c:	08000e8b 	.word	0x08000e8b
 8000e40:	08000ddd 	.word	0x08000ddd
 8000e44:	08000ddd 	.word	0x08000ddd
 8000e48:	08000f23 	.word	0x08000f23
 8000e4c:	6833      	ldr	r3, [r6, #0]
 8000e4e:	1d1a      	adds	r2, r3, #4
 8000e50:	681b      	ldr	r3, [r3, #0]
 8000e52:	6032      	str	r2, [r6, #0]
 8000e54:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8000e58:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8000e5c:	2301      	movs	r3, #1
 8000e5e:	e09d      	b.n	8000f9c <_printf_i+0x1e8>
 8000e60:	6833      	ldr	r3, [r6, #0]
 8000e62:	6820      	ldr	r0, [r4, #0]
 8000e64:	1d19      	adds	r1, r3, #4
 8000e66:	6031      	str	r1, [r6, #0]
 8000e68:	0606      	lsls	r6, r0, #24
 8000e6a:	d501      	bpl.n	8000e70 <_printf_i+0xbc>
 8000e6c:	681d      	ldr	r5, [r3, #0]
 8000e6e:	e003      	b.n	8000e78 <_printf_i+0xc4>
 8000e70:	0645      	lsls	r5, r0, #25
 8000e72:	d5fb      	bpl.n	8000e6c <_printf_i+0xb8>
 8000e74:	f9b3 5000 	ldrsh.w	r5, [r3]
 8000e78:	2d00      	cmp	r5, #0
 8000e7a:	da03      	bge.n	8000e84 <_printf_i+0xd0>
 8000e7c:	232d      	movs	r3, #45	@ 0x2d
 8000e7e:	426d      	negs	r5, r5
 8000e80:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8000e84:	4859      	ldr	r0, [pc, #356]	@ (8000fec <_printf_i+0x238>)
 8000e86:	230a      	movs	r3, #10
 8000e88:	e011      	b.n	8000eae <_printf_i+0xfa>
 8000e8a:	6821      	ldr	r1, [r4, #0]
 8000e8c:	6833      	ldr	r3, [r6, #0]
 8000e8e:	0608      	lsls	r0, r1, #24
 8000e90:	f853 5b04 	ldr.w	r5, [r3], #4
 8000e94:	d402      	bmi.n	8000e9c <_printf_i+0xe8>
 8000e96:	0649      	lsls	r1, r1, #25
 8000e98:	bf48      	it	mi
 8000e9a:	b2ad      	uxthmi	r5, r5
 8000e9c:	2f6f      	cmp	r7, #111	@ 0x6f
 8000e9e:	4853      	ldr	r0, [pc, #332]	@ (8000fec <_printf_i+0x238>)
 8000ea0:	6033      	str	r3, [r6, #0]
 8000ea2:	bf14      	ite	ne
 8000ea4:	230a      	movne	r3, #10
 8000ea6:	2308      	moveq	r3, #8
 8000ea8:	2100      	movs	r1, #0
 8000eaa:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8000eae:	6866      	ldr	r6, [r4, #4]
 8000eb0:	60a6      	str	r6, [r4, #8]
 8000eb2:	2e00      	cmp	r6, #0
 8000eb4:	bfa2      	ittt	ge
 8000eb6:	6821      	ldrge	r1, [r4, #0]
 8000eb8:	f021 0104 	bicge.w	r1, r1, #4
 8000ebc:	6021      	strge	r1, [r4, #0]
 8000ebe:	b90d      	cbnz	r5, 8000ec4 <_printf_i+0x110>
 8000ec0:	2e00      	cmp	r6, #0
 8000ec2:	d04b      	beq.n	8000f5c <_printf_i+0x1a8>
 8000ec4:	4616      	mov	r6, r2
 8000ec6:	fbb5 f1f3 	udiv	r1, r5, r3
 8000eca:	fb03 5711 	mls	r7, r3, r1, r5
 8000ece:	5dc7      	ldrb	r7, [r0, r7]
 8000ed0:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8000ed4:	462f      	mov	r7, r5
 8000ed6:	42bb      	cmp	r3, r7
 8000ed8:	460d      	mov	r5, r1
 8000eda:	d9f4      	bls.n	8000ec6 <_printf_i+0x112>
 8000edc:	2b08      	cmp	r3, #8
 8000ede:	d10b      	bne.n	8000ef8 <_printf_i+0x144>
 8000ee0:	6823      	ldr	r3, [r4, #0]
 8000ee2:	07df      	lsls	r7, r3, #31
 8000ee4:	d508      	bpl.n	8000ef8 <_printf_i+0x144>
 8000ee6:	6923      	ldr	r3, [r4, #16]
 8000ee8:	6861      	ldr	r1, [r4, #4]
 8000eea:	4299      	cmp	r1, r3
 8000eec:	bfde      	ittt	le
 8000eee:	2330      	movle	r3, #48	@ 0x30
 8000ef0:	f806 3c01 	strble.w	r3, [r6, #-1]
 8000ef4:	f106 36ff 	addle.w	r6, r6, #4294967295
 8000ef8:	1b92      	subs	r2, r2, r6
 8000efa:	6122      	str	r2, [r4, #16]
 8000efc:	f8cd a000 	str.w	sl, [sp]
 8000f00:	464b      	mov	r3, r9
 8000f02:	aa03      	add	r2, sp, #12
 8000f04:	4621      	mov	r1, r4
 8000f06:	4640      	mov	r0, r8
 8000f08:	f7ff fee6 	bl	8000cd8 <_printf_common>
 8000f0c:	3001      	adds	r0, #1
 8000f0e:	d14a      	bne.n	8000fa6 <_printf_i+0x1f2>
 8000f10:	f04f 30ff 	mov.w	r0, #4294967295
 8000f14:	b004      	add	sp, #16
 8000f16:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000f1a:	6823      	ldr	r3, [r4, #0]
 8000f1c:	f043 0320 	orr.w	r3, r3, #32
 8000f20:	6023      	str	r3, [r4, #0]
 8000f22:	4833      	ldr	r0, [pc, #204]	@ (8000ff0 <_printf_i+0x23c>)
 8000f24:	2778      	movs	r7, #120	@ 0x78
 8000f26:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8000f2a:	6823      	ldr	r3, [r4, #0]
 8000f2c:	6831      	ldr	r1, [r6, #0]
 8000f2e:	061f      	lsls	r7, r3, #24
 8000f30:	f851 5b04 	ldr.w	r5, [r1], #4
 8000f34:	d402      	bmi.n	8000f3c <_printf_i+0x188>
 8000f36:	065f      	lsls	r7, r3, #25
 8000f38:	bf48      	it	mi
 8000f3a:	b2ad      	uxthmi	r5, r5
 8000f3c:	6031      	str	r1, [r6, #0]
 8000f3e:	07d9      	lsls	r1, r3, #31
 8000f40:	bf44      	itt	mi
 8000f42:	f043 0320 	orrmi.w	r3, r3, #32
 8000f46:	6023      	strmi	r3, [r4, #0]
 8000f48:	b11d      	cbz	r5, 8000f52 <_printf_i+0x19e>
 8000f4a:	2310      	movs	r3, #16
 8000f4c:	e7ac      	b.n	8000ea8 <_printf_i+0xf4>
 8000f4e:	4827      	ldr	r0, [pc, #156]	@ (8000fec <_printf_i+0x238>)
 8000f50:	e7e9      	b.n	8000f26 <_printf_i+0x172>
 8000f52:	6823      	ldr	r3, [r4, #0]
 8000f54:	f023 0320 	bic.w	r3, r3, #32
 8000f58:	6023      	str	r3, [r4, #0]
 8000f5a:	e7f6      	b.n	8000f4a <_printf_i+0x196>
 8000f5c:	4616      	mov	r6, r2
 8000f5e:	e7bd      	b.n	8000edc <_printf_i+0x128>
 8000f60:	6833      	ldr	r3, [r6, #0]
 8000f62:	6825      	ldr	r5, [r4, #0]
 8000f64:	6961      	ldr	r1, [r4, #20]
 8000f66:	1d18      	adds	r0, r3, #4
 8000f68:	6030      	str	r0, [r6, #0]
 8000f6a:	062e      	lsls	r6, r5, #24
 8000f6c:	681b      	ldr	r3, [r3, #0]
 8000f6e:	d501      	bpl.n	8000f74 <_printf_i+0x1c0>
 8000f70:	6019      	str	r1, [r3, #0]
 8000f72:	e002      	b.n	8000f7a <_printf_i+0x1c6>
 8000f74:	0668      	lsls	r0, r5, #25
 8000f76:	d5fb      	bpl.n	8000f70 <_printf_i+0x1bc>
 8000f78:	8019      	strh	r1, [r3, #0]
 8000f7a:	2300      	movs	r3, #0
 8000f7c:	6123      	str	r3, [r4, #16]
 8000f7e:	4616      	mov	r6, r2
 8000f80:	e7bc      	b.n	8000efc <_printf_i+0x148>
 8000f82:	6833      	ldr	r3, [r6, #0]
 8000f84:	1d1a      	adds	r2, r3, #4
 8000f86:	6032      	str	r2, [r6, #0]
 8000f88:	681e      	ldr	r6, [r3, #0]
 8000f8a:	6862      	ldr	r2, [r4, #4]
 8000f8c:	2100      	movs	r1, #0
 8000f8e:	4630      	mov	r0, r6
 8000f90:	f7ff f926 	bl	80001e0 <memchr>
 8000f94:	b108      	cbz	r0, 8000f9a <_printf_i+0x1e6>
 8000f96:	1b80      	subs	r0, r0, r6
 8000f98:	6060      	str	r0, [r4, #4]
 8000f9a:	6863      	ldr	r3, [r4, #4]
 8000f9c:	6123      	str	r3, [r4, #16]
 8000f9e:	2300      	movs	r3, #0
 8000fa0:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8000fa4:	e7aa      	b.n	8000efc <_printf_i+0x148>
 8000fa6:	6923      	ldr	r3, [r4, #16]
 8000fa8:	4632      	mov	r2, r6
 8000faa:	4649      	mov	r1, r9
 8000fac:	4640      	mov	r0, r8
 8000fae:	47d0      	blx	sl
 8000fb0:	3001      	adds	r0, #1
 8000fb2:	d0ad      	beq.n	8000f10 <_printf_i+0x15c>
 8000fb4:	6823      	ldr	r3, [r4, #0]
 8000fb6:	079b      	lsls	r3, r3, #30
 8000fb8:	d413      	bmi.n	8000fe2 <_printf_i+0x22e>
 8000fba:	68e0      	ldr	r0, [r4, #12]
 8000fbc:	9b03      	ldr	r3, [sp, #12]
 8000fbe:	4298      	cmp	r0, r3
 8000fc0:	bfb8      	it	lt
 8000fc2:	4618      	movlt	r0, r3
 8000fc4:	e7a6      	b.n	8000f14 <_printf_i+0x160>
 8000fc6:	2301      	movs	r3, #1
 8000fc8:	4632      	mov	r2, r6
 8000fca:	4649      	mov	r1, r9
 8000fcc:	4640      	mov	r0, r8
 8000fce:	47d0      	blx	sl
 8000fd0:	3001      	adds	r0, #1
 8000fd2:	d09d      	beq.n	8000f10 <_printf_i+0x15c>
 8000fd4:	3501      	adds	r5, #1
 8000fd6:	68e3      	ldr	r3, [r4, #12]
 8000fd8:	9903      	ldr	r1, [sp, #12]
 8000fda:	1a5b      	subs	r3, r3, r1
 8000fdc:	42ab      	cmp	r3, r5
 8000fde:	dcf2      	bgt.n	8000fc6 <_printf_i+0x212>
 8000fe0:	e7eb      	b.n	8000fba <_printf_i+0x206>
 8000fe2:	2500      	movs	r5, #0
 8000fe4:	f104 0619 	add.w	r6, r4, #25
 8000fe8:	e7f5      	b.n	8000fd6 <_printf_i+0x222>
 8000fea:	bf00      	nop
 8000fec:	080013e1 	.word	0x080013e1
 8000ff0:	080013f2 	.word	0x080013f2

08000ff4 <__sflush_r>:
 8000ff4:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8000ff8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000ffc:	0716      	lsls	r6, r2, #28
 8000ffe:	4605      	mov	r5, r0
 8001000:	460c      	mov	r4, r1
 8001002:	d454      	bmi.n	80010ae <__sflush_r+0xba>
 8001004:	684b      	ldr	r3, [r1, #4]
 8001006:	2b00      	cmp	r3, #0
 8001008:	dc02      	bgt.n	8001010 <__sflush_r+0x1c>
 800100a:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 800100c:	2b00      	cmp	r3, #0
 800100e:	dd48      	ble.n	80010a2 <__sflush_r+0xae>
 8001010:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8001012:	2e00      	cmp	r6, #0
 8001014:	d045      	beq.n	80010a2 <__sflush_r+0xae>
 8001016:	2300      	movs	r3, #0
 8001018:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 800101c:	682f      	ldr	r7, [r5, #0]
 800101e:	6a21      	ldr	r1, [r4, #32]
 8001020:	602b      	str	r3, [r5, #0]
 8001022:	d030      	beq.n	8001086 <__sflush_r+0x92>
 8001024:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8001026:	89a3      	ldrh	r3, [r4, #12]
 8001028:	0759      	lsls	r1, r3, #29
 800102a:	d505      	bpl.n	8001038 <__sflush_r+0x44>
 800102c:	6863      	ldr	r3, [r4, #4]
 800102e:	1ad2      	subs	r2, r2, r3
 8001030:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8001032:	b10b      	cbz	r3, 8001038 <__sflush_r+0x44>
 8001034:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8001036:	1ad2      	subs	r2, r2, r3
 8001038:	2300      	movs	r3, #0
 800103a:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 800103c:	6a21      	ldr	r1, [r4, #32]
 800103e:	4628      	mov	r0, r5
 8001040:	47b0      	blx	r6
 8001042:	1c43      	adds	r3, r0, #1
 8001044:	89a3      	ldrh	r3, [r4, #12]
 8001046:	d106      	bne.n	8001056 <__sflush_r+0x62>
 8001048:	6829      	ldr	r1, [r5, #0]
 800104a:	291d      	cmp	r1, #29
 800104c:	d82b      	bhi.n	80010a6 <__sflush_r+0xb2>
 800104e:	4a2a      	ldr	r2, [pc, #168]	@ (80010f8 <__sflush_r+0x104>)
 8001050:	410a      	asrs	r2, r1
 8001052:	07d6      	lsls	r6, r2, #31
 8001054:	d427      	bmi.n	80010a6 <__sflush_r+0xb2>
 8001056:	2200      	movs	r2, #0
 8001058:	6062      	str	r2, [r4, #4]
 800105a:	04d9      	lsls	r1, r3, #19
 800105c:	6922      	ldr	r2, [r4, #16]
 800105e:	6022      	str	r2, [r4, #0]
 8001060:	d504      	bpl.n	800106c <__sflush_r+0x78>
 8001062:	1c42      	adds	r2, r0, #1
 8001064:	d101      	bne.n	800106a <__sflush_r+0x76>
 8001066:	682b      	ldr	r3, [r5, #0]
 8001068:	b903      	cbnz	r3, 800106c <__sflush_r+0x78>
 800106a:	6560      	str	r0, [r4, #84]	@ 0x54
 800106c:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 800106e:	602f      	str	r7, [r5, #0]
 8001070:	b1b9      	cbz	r1, 80010a2 <__sflush_r+0xae>
 8001072:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8001076:	4299      	cmp	r1, r3
 8001078:	d002      	beq.n	8001080 <__sflush_r+0x8c>
 800107a:	4628      	mov	r0, r5
 800107c:	f7ff fbf2 	bl	8000864 <_free_r>
 8001080:	2300      	movs	r3, #0
 8001082:	6363      	str	r3, [r4, #52]	@ 0x34
 8001084:	e00d      	b.n	80010a2 <__sflush_r+0xae>
 8001086:	2301      	movs	r3, #1
 8001088:	4628      	mov	r0, r5
 800108a:	47b0      	blx	r6
 800108c:	4602      	mov	r2, r0
 800108e:	1c50      	adds	r0, r2, #1
 8001090:	d1c9      	bne.n	8001026 <__sflush_r+0x32>
 8001092:	682b      	ldr	r3, [r5, #0]
 8001094:	2b00      	cmp	r3, #0
 8001096:	d0c6      	beq.n	8001026 <__sflush_r+0x32>
 8001098:	2b1d      	cmp	r3, #29
 800109a:	d001      	beq.n	80010a0 <__sflush_r+0xac>
 800109c:	2b16      	cmp	r3, #22
 800109e:	d11e      	bne.n	80010de <__sflush_r+0xea>
 80010a0:	602f      	str	r7, [r5, #0]
 80010a2:	2000      	movs	r0, #0
 80010a4:	e022      	b.n	80010ec <__sflush_r+0xf8>
 80010a6:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80010aa:	b21b      	sxth	r3, r3
 80010ac:	e01b      	b.n	80010e6 <__sflush_r+0xf2>
 80010ae:	690f      	ldr	r7, [r1, #16]
 80010b0:	2f00      	cmp	r7, #0
 80010b2:	d0f6      	beq.n	80010a2 <__sflush_r+0xae>
 80010b4:	0793      	lsls	r3, r2, #30
 80010b6:	680e      	ldr	r6, [r1, #0]
 80010b8:	bf08      	it	eq
 80010ba:	694b      	ldreq	r3, [r1, #20]
 80010bc:	600f      	str	r7, [r1, #0]
 80010be:	bf18      	it	ne
 80010c0:	2300      	movne	r3, #0
 80010c2:	eba6 0807 	sub.w	r8, r6, r7
 80010c6:	608b      	str	r3, [r1, #8]
 80010c8:	f1b8 0f00 	cmp.w	r8, #0
 80010cc:	dde9      	ble.n	80010a2 <__sflush_r+0xae>
 80010ce:	6a21      	ldr	r1, [r4, #32]
 80010d0:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 80010d2:	4643      	mov	r3, r8
 80010d4:	463a      	mov	r2, r7
 80010d6:	4628      	mov	r0, r5
 80010d8:	47b0      	blx	r6
 80010da:	2800      	cmp	r0, #0
 80010dc:	dc08      	bgt.n	80010f0 <__sflush_r+0xfc>
 80010de:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80010e2:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80010e6:	81a3      	strh	r3, [r4, #12]
 80010e8:	f04f 30ff 	mov.w	r0, #4294967295
 80010ec:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80010f0:	4407      	add	r7, r0
 80010f2:	eba8 0800 	sub.w	r8, r8, r0
 80010f6:	e7e7      	b.n	80010c8 <__sflush_r+0xd4>
 80010f8:	dfbffffe 	.word	0xdfbffffe

080010fc <_fflush_r>:
 80010fc:	b538      	push	{r3, r4, r5, lr}
 80010fe:	690b      	ldr	r3, [r1, #16]
 8001100:	4605      	mov	r5, r0
 8001102:	460c      	mov	r4, r1
 8001104:	b913      	cbnz	r3, 800110c <_fflush_r+0x10>
 8001106:	2500      	movs	r5, #0
 8001108:	4628      	mov	r0, r5
 800110a:	bd38      	pop	{r3, r4, r5, pc}
 800110c:	b118      	cbz	r0, 8001116 <_fflush_r+0x1a>
 800110e:	6a03      	ldr	r3, [r0, #32]
 8001110:	b90b      	cbnz	r3, 8001116 <_fflush_r+0x1a>
 8001112:	f7ff fa9f 	bl	8000654 <__sinit>
 8001116:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800111a:	2b00      	cmp	r3, #0
 800111c:	d0f3      	beq.n	8001106 <_fflush_r+0xa>
 800111e:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8001120:	07d0      	lsls	r0, r2, #31
 8001122:	d404      	bmi.n	800112e <_fflush_r+0x32>
 8001124:	0599      	lsls	r1, r3, #22
 8001126:	d402      	bmi.n	800112e <_fflush_r+0x32>
 8001128:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800112a:	f7ff fb98 	bl	800085e <__retarget_lock_acquire_recursive>
 800112e:	4628      	mov	r0, r5
 8001130:	4621      	mov	r1, r4
 8001132:	f7ff ff5f 	bl	8000ff4 <__sflush_r>
 8001136:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8001138:	07da      	lsls	r2, r3, #31
 800113a:	4605      	mov	r5, r0
 800113c:	d4e4      	bmi.n	8001108 <_fflush_r+0xc>
 800113e:	89a3      	ldrh	r3, [r4, #12]
 8001140:	059b      	lsls	r3, r3, #22
 8001142:	d4e1      	bmi.n	8001108 <_fflush_r+0xc>
 8001144:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8001146:	f7ff fb8b 	bl	8000860 <__retarget_lock_release_recursive>
 800114a:	e7dd      	b.n	8001108 <_fflush_r+0xc>

0800114c <__swbuf_r>:
 800114c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800114e:	460e      	mov	r6, r1
 8001150:	4614      	mov	r4, r2
 8001152:	4605      	mov	r5, r0
 8001154:	b118      	cbz	r0, 800115e <__swbuf_r+0x12>
 8001156:	6a03      	ldr	r3, [r0, #32]
 8001158:	b90b      	cbnz	r3, 800115e <__swbuf_r+0x12>
 800115a:	f7ff fa7b 	bl	8000654 <__sinit>
 800115e:	69a3      	ldr	r3, [r4, #24]
 8001160:	60a3      	str	r3, [r4, #8]
 8001162:	89a3      	ldrh	r3, [r4, #12]
 8001164:	071a      	lsls	r2, r3, #28
 8001166:	d501      	bpl.n	800116c <__swbuf_r+0x20>
 8001168:	6923      	ldr	r3, [r4, #16]
 800116a:	b943      	cbnz	r3, 800117e <__swbuf_r+0x32>
 800116c:	4621      	mov	r1, r4
 800116e:	4628      	mov	r0, r5
 8001170:	f000 f82a 	bl	80011c8 <__swsetup_r>
 8001174:	b118      	cbz	r0, 800117e <__swbuf_r+0x32>
 8001176:	f04f 37ff 	mov.w	r7, #4294967295
 800117a:	4638      	mov	r0, r7
 800117c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800117e:	6823      	ldr	r3, [r4, #0]
 8001180:	6922      	ldr	r2, [r4, #16]
 8001182:	1a98      	subs	r0, r3, r2
 8001184:	6963      	ldr	r3, [r4, #20]
 8001186:	b2f6      	uxtb	r6, r6
 8001188:	4283      	cmp	r3, r0
 800118a:	4637      	mov	r7, r6
 800118c:	dc05      	bgt.n	800119a <__swbuf_r+0x4e>
 800118e:	4621      	mov	r1, r4
 8001190:	4628      	mov	r0, r5
 8001192:	f7ff ffb3 	bl	80010fc <_fflush_r>
 8001196:	2800      	cmp	r0, #0
 8001198:	d1ed      	bne.n	8001176 <__swbuf_r+0x2a>
 800119a:	68a3      	ldr	r3, [r4, #8]
 800119c:	3b01      	subs	r3, #1
 800119e:	60a3      	str	r3, [r4, #8]
 80011a0:	6823      	ldr	r3, [r4, #0]
 80011a2:	1c5a      	adds	r2, r3, #1
 80011a4:	6022      	str	r2, [r4, #0]
 80011a6:	701e      	strb	r6, [r3, #0]
 80011a8:	6962      	ldr	r2, [r4, #20]
 80011aa:	1c43      	adds	r3, r0, #1
 80011ac:	429a      	cmp	r2, r3
 80011ae:	d004      	beq.n	80011ba <__swbuf_r+0x6e>
 80011b0:	89a3      	ldrh	r3, [r4, #12]
 80011b2:	07db      	lsls	r3, r3, #31
 80011b4:	d5e1      	bpl.n	800117a <__swbuf_r+0x2e>
 80011b6:	2e0a      	cmp	r6, #10
 80011b8:	d1df      	bne.n	800117a <__swbuf_r+0x2e>
 80011ba:	4621      	mov	r1, r4
 80011bc:	4628      	mov	r0, r5
 80011be:	f7ff ff9d 	bl	80010fc <_fflush_r>
 80011c2:	2800      	cmp	r0, #0
 80011c4:	d0d9      	beq.n	800117a <__swbuf_r+0x2e>
 80011c6:	e7d6      	b.n	8001176 <__swbuf_r+0x2a>

080011c8 <__swsetup_r>:
 80011c8:	b538      	push	{r3, r4, r5, lr}
 80011ca:	4b29      	ldr	r3, [pc, #164]	@ (8001270 <__swsetup_r+0xa8>)
 80011cc:	4605      	mov	r5, r0
 80011ce:	6818      	ldr	r0, [r3, #0]
 80011d0:	460c      	mov	r4, r1
 80011d2:	b118      	cbz	r0, 80011dc <__swsetup_r+0x14>
 80011d4:	6a03      	ldr	r3, [r0, #32]
 80011d6:	b90b      	cbnz	r3, 80011dc <__swsetup_r+0x14>
 80011d8:	f7ff fa3c 	bl	8000654 <__sinit>
 80011dc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80011e0:	0719      	lsls	r1, r3, #28
 80011e2:	d422      	bmi.n	800122a <__swsetup_r+0x62>
 80011e4:	06da      	lsls	r2, r3, #27
 80011e6:	d407      	bmi.n	80011f8 <__swsetup_r+0x30>
 80011e8:	2209      	movs	r2, #9
 80011ea:	602a      	str	r2, [r5, #0]
 80011ec:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80011f0:	81a3      	strh	r3, [r4, #12]
 80011f2:	f04f 30ff 	mov.w	r0, #4294967295
 80011f6:	e033      	b.n	8001260 <__swsetup_r+0x98>
 80011f8:	0758      	lsls	r0, r3, #29
 80011fa:	d512      	bpl.n	8001222 <__swsetup_r+0x5a>
 80011fc:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80011fe:	b141      	cbz	r1, 8001212 <__swsetup_r+0x4a>
 8001200:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8001204:	4299      	cmp	r1, r3
 8001206:	d002      	beq.n	800120e <__swsetup_r+0x46>
 8001208:	4628      	mov	r0, r5
 800120a:	f7ff fb2b 	bl	8000864 <_free_r>
 800120e:	2300      	movs	r3, #0
 8001210:	6363      	str	r3, [r4, #52]	@ 0x34
 8001212:	89a3      	ldrh	r3, [r4, #12]
 8001214:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8001218:	81a3      	strh	r3, [r4, #12]
 800121a:	2300      	movs	r3, #0
 800121c:	6063      	str	r3, [r4, #4]
 800121e:	6923      	ldr	r3, [r4, #16]
 8001220:	6023      	str	r3, [r4, #0]
 8001222:	89a3      	ldrh	r3, [r4, #12]
 8001224:	f043 0308 	orr.w	r3, r3, #8
 8001228:	81a3      	strh	r3, [r4, #12]
 800122a:	6923      	ldr	r3, [r4, #16]
 800122c:	b94b      	cbnz	r3, 8001242 <__swsetup_r+0x7a>
 800122e:	89a3      	ldrh	r3, [r4, #12]
 8001230:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8001234:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8001238:	d003      	beq.n	8001242 <__swsetup_r+0x7a>
 800123a:	4621      	mov	r1, r4
 800123c:	4628      	mov	r0, r5
 800123e:	f000 f84f 	bl	80012e0 <__smakebuf_r>
 8001242:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001246:	f013 0201 	ands.w	r2, r3, #1
 800124a:	d00a      	beq.n	8001262 <__swsetup_r+0x9a>
 800124c:	2200      	movs	r2, #0
 800124e:	60a2      	str	r2, [r4, #8]
 8001250:	6962      	ldr	r2, [r4, #20]
 8001252:	4252      	negs	r2, r2
 8001254:	61a2      	str	r2, [r4, #24]
 8001256:	6922      	ldr	r2, [r4, #16]
 8001258:	b942      	cbnz	r2, 800126c <__swsetup_r+0xa4>
 800125a:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 800125e:	d1c5      	bne.n	80011ec <__swsetup_r+0x24>
 8001260:	bd38      	pop	{r3, r4, r5, pc}
 8001262:	0799      	lsls	r1, r3, #30
 8001264:	bf58      	it	pl
 8001266:	6962      	ldrpl	r2, [r4, #20]
 8001268:	60a2      	str	r2, [r4, #8]
 800126a:	e7f4      	b.n	8001256 <__swsetup_r+0x8e>
 800126c:	2000      	movs	r0, #0
 800126e:	e7f7      	b.n	8001260 <__swsetup_r+0x98>
 8001270:	2000000c 	.word	0x2000000c

08001274 <_sbrk_r>:
 8001274:	b538      	push	{r3, r4, r5, lr}
 8001276:	4d06      	ldr	r5, [pc, #24]	@ (8001290 <_sbrk_r+0x1c>)
 8001278:	2300      	movs	r3, #0
 800127a:	4604      	mov	r4, r0
 800127c:	4608      	mov	r0, r1
 800127e:	602b      	str	r3, [r5, #0]
 8001280:	f7ff f88c 	bl	800039c <_sbrk>
 8001284:	1c43      	adds	r3, r0, #1
 8001286:	d102      	bne.n	800128e <_sbrk_r+0x1a>
 8001288:	682b      	ldr	r3, [r5, #0]
 800128a:	b103      	cbz	r3, 800128e <_sbrk_r+0x1a>
 800128c:	6023      	str	r3, [r4, #0]
 800128e:	bd38      	pop	{r3, r4, r5, pc}
 8001290:	200001b8 	.word	0x200001b8

08001294 <__swhatbuf_r>:
 8001294:	b570      	push	{r4, r5, r6, lr}
 8001296:	460c      	mov	r4, r1
 8001298:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800129c:	2900      	cmp	r1, #0
 800129e:	b096      	sub	sp, #88	@ 0x58
 80012a0:	4615      	mov	r5, r2
 80012a2:	461e      	mov	r6, r3
 80012a4:	da0d      	bge.n	80012c2 <__swhatbuf_r+0x2e>
 80012a6:	89a3      	ldrh	r3, [r4, #12]
 80012a8:	f013 0f80 	tst.w	r3, #128	@ 0x80
 80012ac:	f04f 0100 	mov.w	r1, #0
 80012b0:	bf14      	ite	ne
 80012b2:	2340      	movne	r3, #64	@ 0x40
 80012b4:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 80012b8:	2000      	movs	r0, #0
 80012ba:	6031      	str	r1, [r6, #0]
 80012bc:	602b      	str	r3, [r5, #0]
 80012be:	b016      	add	sp, #88	@ 0x58
 80012c0:	bd70      	pop	{r4, r5, r6, pc}
 80012c2:	466a      	mov	r2, sp
 80012c4:	f000 f848 	bl	8001358 <_fstat_r>
 80012c8:	2800      	cmp	r0, #0
 80012ca:	dbec      	blt.n	80012a6 <__swhatbuf_r+0x12>
 80012cc:	9901      	ldr	r1, [sp, #4]
 80012ce:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 80012d2:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 80012d6:	4259      	negs	r1, r3
 80012d8:	4159      	adcs	r1, r3
 80012da:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80012de:	e7eb      	b.n	80012b8 <__swhatbuf_r+0x24>

080012e0 <__smakebuf_r>:
 80012e0:	898b      	ldrh	r3, [r1, #12]
 80012e2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80012e4:	079d      	lsls	r5, r3, #30
 80012e6:	4606      	mov	r6, r0
 80012e8:	460c      	mov	r4, r1
 80012ea:	d507      	bpl.n	80012fc <__smakebuf_r+0x1c>
 80012ec:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 80012f0:	6023      	str	r3, [r4, #0]
 80012f2:	6123      	str	r3, [r4, #16]
 80012f4:	2301      	movs	r3, #1
 80012f6:	6163      	str	r3, [r4, #20]
 80012f8:	b003      	add	sp, #12
 80012fa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80012fc:	ab01      	add	r3, sp, #4
 80012fe:	466a      	mov	r2, sp
 8001300:	f7ff ffc8 	bl	8001294 <__swhatbuf_r>
 8001304:	9f00      	ldr	r7, [sp, #0]
 8001306:	4605      	mov	r5, r0
 8001308:	4639      	mov	r1, r7
 800130a:	4630      	mov	r0, r6
 800130c:	f7ff fb16 	bl	800093c <_malloc_r>
 8001310:	b948      	cbnz	r0, 8001326 <__smakebuf_r+0x46>
 8001312:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8001316:	059a      	lsls	r2, r3, #22
 8001318:	d4ee      	bmi.n	80012f8 <__smakebuf_r+0x18>
 800131a:	f023 0303 	bic.w	r3, r3, #3
 800131e:	f043 0302 	orr.w	r3, r3, #2
 8001322:	81a3      	strh	r3, [r4, #12]
 8001324:	e7e2      	b.n	80012ec <__smakebuf_r+0xc>
 8001326:	89a3      	ldrh	r3, [r4, #12]
 8001328:	6020      	str	r0, [r4, #0]
 800132a:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800132e:	81a3      	strh	r3, [r4, #12]
 8001330:	9b01      	ldr	r3, [sp, #4]
 8001332:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8001336:	b15b      	cbz	r3, 8001350 <__smakebuf_r+0x70>
 8001338:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800133c:	4630      	mov	r0, r6
 800133e:	f000 f81d 	bl	800137c <_isatty_r>
 8001342:	b128      	cbz	r0, 8001350 <__smakebuf_r+0x70>
 8001344:	89a3      	ldrh	r3, [r4, #12]
 8001346:	f023 0303 	bic.w	r3, r3, #3
 800134a:	f043 0301 	orr.w	r3, r3, #1
 800134e:	81a3      	strh	r3, [r4, #12]
 8001350:	89a3      	ldrh	r3, [r4, #12]
 8001352:	431d      	orrs	r5, r3
 8001354:	81a5      	strh	r5, [r4, #12]
 8001356:	e7cf      	b.n	80012f8 <__smakebuf_r+0x18>

08001358 <_fstat_r>:
 8001358:	b538      	push	{r3, r4, r5, lr}
 800135a:	4d07      	ldr	r5, [pc, #28]	@ (8001378 <_fstat_r+0x20>)
 800135c:	2300      	movs	r3, #0
 800135e:	4604      	mov	r4, r0
 8001360:	4608      	mov	r0, r1
 8001362:	4611      	mov	r1, r2
 8001364:	602b      	str	r3, [r5, #0]
 8001366:	f7fe fff0 	bl	800034a <_fstat>
 800136a:	1c43      	adds	r3, r0, #1
 800136c:	d102      	bne.n	8001374 <_fstat_r+0x1c>
 800136e:	682b      	ldr	r3, [r5, #0]
 8001370:	b103      	cbz	r3, 8001374 <_fstat_r+0x1c>
 8001372:	6023      	str	r3, [r4, #0]
 8001374:	bd38      	pop	{r3, r4, r5, pc}
 8001376:	bf00      	nop
 8001378:	200001b8 	.word	0x200001b8

0800137c <_isatty_r>:
 800137c:	b538      	push	{r3, r4, r5, lr}
 800137e:	4d06      	ldr	r5, [pc, #24]	@ (8001398 <_isatty_r+0x1c>)
 8001380:	2300      	movs	r3, #0
 8001382:	4604      	mov	r4, r0
 8001384:	4608      	mov	r0, r1
 8001386:	602b      	str	r3, [r5, #0]
 8001388:	f7fe ffef 	bl	800036a <_isatty>
 800138c:	1c43      	adds	r3, r0, #1
 800138e:	d102      	bne.n	8001396 <_isatty_r+0x1a>
 8001390:	682b      	ldr	r3, [r5, #0]
 8001392:	b103      	cbz	r3, 8001396 <_isatty_r+0x1a>
 8001394:	6023      	str	r3, [r4, #0]
 8001396:	bd38      	pop	{r3, r4, r5, pc}
 8001398:	200001b8 	.word	0x200001b8

0800139c <_init>:
 800139c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800139e:	bf00      	nop
 80013a0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80013a2:	bc08      	pop	{r3}
 80013a4:	469e      	mov	lr, r3
 80013a6:	4770      	bx	lr

080013a8 <_fini>:
 80013a8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80013aa:	bf00      	nop
 80013ac:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80013ae:	bc08      	pop	{r3}
 80013b0:	469e      	mov	lr, r3
 80013b2:	4770      	bx	lr
